{"ast":null,"code":"var _methods;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport axios from \"axios\";\nimport IndexBuildings from \"./index_building.vue\";\nimport moment from \"moment\";\nexport default {\n  name: \"edit_building\",\n  props: [\"queryType\", \"modalHeader\", \"buildingId\", \"id\"],\n  components: {\n    \"index-building\": IndexBuildings\n  },\n  data: function data() {\n    return {\n      building: null,\n      buildings: [],\n      props: [\"id\"],\n      units: [],\n      managers: [],\n      aux_unit_id: null,\n      aux_duty_manager_id: null\n    };\n  },\n  methods: (_methods = {\n    getbuilding: function getbuilding() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"/buildings/\" + _this.id + \".json\");\n\n              case 2:\n                response = _context.sent;\n                _this.loading = true;\n                _this.building = response.data;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    getunitactive: function getunitactive() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get(\"/units/showactiveunit.json\");\n\n              case 2:\n                response = _context2.sent;\n                _this2.units = response.data;\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    getdutymanagerbyunit: function getdutymanagerbyunit(item) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios.get(\"http://localhost:3000/duty_managers/showdutymanagerunit/\" + item + \".json\");\n\n              case 2:\n                response = _context3.sent;\n                _this3.managers = response.data;\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    getbuildingbyunit: function getbuildingbyunit(item) {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return axios.get(\"http://localhost:3000/buildings/showbuildingunit/\" + item + \".json\");\n\n              case 2:\n                response = _context4.sent;\n                _this4.buildings = response.data;\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    getofficebybuilding: function getofficebybuilding(item) {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return axios.get(\"http://localhost:3000/offices/showofficebuilding/\" + item + \".json\");\n\n              case 2:\n                response = _context5.sent;\n                _this5.offices = response.data;\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    },\n    //Funciones para editar datos del edificio\n    confirmedit: function confirmedit() {\n      var _this6 = this;\n\n      this.$buefy.dialog.confirm({\n        title: \"Editar el edificio\",\n        message: \"\\xBFEsta seguro de editar el edificio?\",\n        cancelText: \"Cancelar\",\n        confirmText: \"Guardar\",\n        type: \"is-info\",\n        onConfirm: function onConfirm() {\n          return _this6.EditClick();\n        }\n      });\n    },\n    EditClick: function EditClick() {\n      var _this7 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return axios.put(\"/buildings/\" + _this7.id + \".json\", {\n                  name_building: _this7.building.name_building,\n                  identification_number_building: _this7.building.identification_number_building,\n                  location_building: _this7.building.location_building\n                });\n\n              case 2:\n                response = _context6.sent;\n                window.location.href = \"/buildings/\" + _this7.id;\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    },\n    //Funciones para editar cargos del edificio\n    confirmeditDes: function confirmeditDes() {\n      var _this8 = this;\n\n      this.$buefy.dialog.confirm({\n        title: \"Editar el edificio\",\n        message: \"\\xBFEsta seguro de editar el edificio?\",\n        cancelText: \"Cancelar\",\n        confirmText: \"Guardar\",\n        type: \"is-info\",\n        onConfirm: function onConfirm() {\n          return _this8.getofficebybuilding();\n        }\n      });\n    }\n  }, _defineProperty(_methods, \"getofficebybuilding\", function getofficebybuilding() {\n    var _this9 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n      var response;\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return axios.get(\"/offices/showofficebuilding/\" + _this9.id + \".json\");\n\n            case 2:\n              response = _context7.sent;\n              _this9.offices_building = response.data;\n\n              if (_this9.offices_building.length == 0) {\n                console.log(_this9.aux_unit_id);\n                console.log(_this9.aux_duty_manager_id);\n\n                _this9.EditClickDes();\n              } else {\n                _this9.$buefy.dialog.alert({\n                  title: 'No se puede cambiar designación',\n                  type: 'is-danger',\n                  message: 'Existen dependencias designados en el edificio',\n                  confirmText: 'Aceptar'\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }))();\n  }), _defineProperty(_methods, \"EditClickDes\", function EditClickDes() {\n    var _this10 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n      var response;\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return axios.put(\"/buildings/\" + _this10.id + \".json\", {\n                duty_manager_id: _this10.aux_duty_manager_id,\n                unit_id: _this10.aux_unit_id,\n                activegood: 1\n              });\n\n            case 2:\n              response = _context8.sent;\n              console.log(_this10.aux_unit_id);\n              window.location.href = \"/buildings\";\n\n            case 5:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }))();\n  }), _methods),\n  created: function created() {\n    this.getbuilding();\n    this.getunitactive();\n  }\n};","map":{"version":3,"mappings":";;;;+CAsKA,oJ;;;;;;AAAA;AACA;AACA;AACA;EACAA,qBADA;EAEAC,uDAFA;EAGAC;IACA;EADA,CAHA;EAOAC,IAPA,kBAOA;IACA;MACAC,cADA;MAEAC,aAFA;MAGAJ,aAHA;MAIAK,SAJA;MAKAC,YALA;MAMAC,iBANA;MAOAC;IAPA;EASA,CAjBA;EAkBAC;IACAC,WADA,yBACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC,6CADA;;cAAA;gBACAC,QADA;gBAEA;gBACA;;cAHA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAIA,CALA;IAOAC,aAPA,2BAOA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAF,uCADA;;cAAA;gBACAC,QADA;gBAEA;;cAFA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAGA,CAVA;IAYAE,oBAZA,gCAYAC,IAZA,EAYA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAJ,UACA,6DACAI,IADA,GAEA,OAHA,CADA;;cAAA;gBACAH,QADA;gBAMA;;cANA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAOA,CAnBA;IAqBAI,iBArBA,6BAqBAD,IArBA,EAqBA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAJ,UACA,oEADA,CADA;;cAAA;gBACAC,QADA;gBAIA;;cAJA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAKA,CA1BA;IA4BAK,mBA5BA,+BA4BAF,IA5BA,EA4BA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAJ,UACA,oEADA,CADA;;cAAA;gBACAC,QADA;gBAIA;;cAJA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAKA,CAjCA;IAoCA;IACAM,WArCA,yBAqCA;MAAA;;MACA;QACAC,2BADA;QAEAC,iDAFA;QAGAC,sBAHA;QAIAC,sBAJA;QAKAC,eALA;QAMAC;UAAA;QAAA;MANA;IAQA,CA9CA;IAgDAC,SAhDA,uBAgDA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAd;kBACAe,4CADA;kBAEAC,8EAFA;kBAGAC;gBAHA,EADA;;cAAA;gBACAhB,QADA;gBAMAiB;;cANA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAOA,CAvDA;IA0DA;IAEAC,cA5DA,4BA4DA;MAAA;;MACA;QACAX,2BADA;QAEAC,iDAFA;QAGAC,sBAHA;QAIAC,sBAJA;QAKAC,eALA;QAMAC;UAAA;QAAA;MANA;IAQA;EArEA,mFAuEA;IAAA;;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACAb,UACA,oDADA,CADA;;YAAA;cACAC,QADA;cAIA;;cACA;gBACAmB;gBACAA;;gBACA;cACA,CAJA,MAKA;gBACA;kBACAZ,wCADA;kBAEAI,iBAFA;kBAGAH,yDAHA;kBAIAE;gBAJA;cAMA;;YAjBA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAkBA,CAzFA,qEA0FA;IAAA;;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACAX;gBACAqB,4CADA;gBAEAC,4BAFA;gBAGAC;cAHA,EADA;;YAAA;cACAtB,QADA;cAMAmB;cACAF;;YAPA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAQA,CAlGA,YAlBA;EAwHAM,OAxHA,qBAwHA;IACA;IACA;EACA;AA3HA","names":["name","props","components","data","building","buildings","units","managers","aux_unit_id","aux_duty_manager_id","methods","getbuilding","axios","response","getunitactive","getdutymanagerbyunit","item","getbuildingbyunit","getofficebybuilding","confirmedit","title","message","cancelText","confirmText","type","onConfirm","EditClick","name_building","identification_number_building","location_building","window","confirmeditDes","console","duty_manager_id","unit_id","activegood","created"],"sourceRoot":"app/javascript/components/building","sources":["edit_building.vue"],"sourcesContent":["<template>\n    <section>\n        <div class=\"modal-card\" style=\"width: 62em; height: auto\">\n            <header class=\"modal-card-head\">\n                <p class=\"modal-card-title\">{{ modalHeader }}</p>\n                <button type=\"button\" class=\"delete\" @click=\"$emit('close')\" />\n            </header>\n            <section class=\"modal-card-body\" ref=\"editBuilding\">\n                <b-tabs>\n                    <div class=\"box\">\n                        <div v-if=\"building\" class=\"columns is-centered\">\n                            <div class=\"column is-centered\">\n\n\n\n                                <b-tabs type=\"is-boxed\" position=\"is-centered\">\n\n                                    <b-tab-item label=\"Datos\">\n\n                                        <div class=\"center\">\n                                            <h1>Datos del Bien</h1>\n                                        </div>\n\n                                        <div class=\"columns\">\n                                            <div class=\"column\">\n                                                <b-field label=\"Nombre\">\n                                                    <b-input v-model=\"building.name_building\"\n                                                        placeholder=\"Ingrese el nombre del edificio\"></b-input>\n                                                </b-field>\n                                            </div>\n\n\n\n                                        </div>\n                                        <div class=\"columns\">\n                                            <div class=\"column\">\n                                                <b-field label=\"Numero edificio\">\n                                                    <b-input v-model=\"building.identification_number_building\"\n                                                        placeholder=\"Ingrese el numero de identificación edificio\">\n                                                    </b-input>\n                                                </b-field>\n                                            </div>\n                                        </div>\n\n\n                                        <div class=\"columns\">\n                                            <div class=\"column\">\n                                                <b-field label=\"Ubicación\">\n                                                    <b-input v-model=\"building.location_building\"\n                                                        placeholder=\"Ingrese la ubicación del edificio\"\n                                                        type=\"textarea\"></b-input>\n                                                </b-field>\n                                            </div>\n                                        </div>\n\n                                        <b-field grouped position=\"is-right\">\n                                            <p class=\"control\">\n                                                <b-button label=\"Guardar\" type=\"is-info\" @click=\"confirmedit()\" />\n                                            </p>\n                                        </b-field>\n                                    </b-tab-item>\n\n\n\n\n\n\n\n                                    <b-tab-item label=\"Cargos\">\n\n\n                                        <div class=\"center\">\n                                            <h1>Designación del edificio</h1>\n                                        </div>\n\n\n                                        <div class=\"columns\">\n                                            <div class=\"column\">\n                                                <b-field label=\"Unidad\">\n                                                    <b-input v-model=\"building.unit.name_unit\" type=\"text\" readonly>\n                                                    </b-input>\n                                                </b-field>\n                                            </div>\n\n\n\n\n                                            <div class=\"column\">\n                                                <b-field label=\"Persona encargada\">\n                                                    <b-input v-model=\"building.duty_manager.name_duty_manager\" type=\"text\"\n                                                        readonly></b-input>\n                                                </b-field>\n                                            </div>\n                                        </div>\n\n\n\n                                        <div>\n\n                                            <div class=\"notification\">\n                                                <div class=\"content\">\n                                                    <h1 class=\"has-text-left\">Nueva designación</h1>\n\n                                                    <div class=\"columns\">\n\n\n                                                        <div class=\"column\">\n                                                            <b-field label=\"Nueva Unidad\">\n                                                                <multiselect v-model=\"aux_unit_id\"\n                                                                    :options=\"units.map((type) => type.id)\"\n                                                                    :custom-label=\"\n                                                                        (opt) =>\n                                                                            units.find((x) => x.id === opt).name_unit\n                                                                    \" placeholder=\"Seleccionar Unidad\" selectedLabel=\"Seleccionado\" selectLabel=\"\"\n                                                                    :allow-empty=\"true\" :disabled=\"\n                                                                        aux_duty_manager_id !== null\n                                                                    \" @input=\"getdutymanagerbyunit(aux_unit_id); \">\n                                                                </multiselect>\n                                                            </b-field>\n                                                        </div>\n\n\n                                                        <div class=\"column\">\n                                                            <b-field label=\"Nueva persona encargada\">\n                                                                <multiselect v-model=\"aux_duty_manager_id\"\n                                                                    :options=\"managers.map((type) => type.id)\"\n                                                                    :custom-label=\"\n                                                                        (opt) =>\n                                                                            managers.find((x) => x.id === opt)\n                                                                                .name_duty_manager\n                                                                    \" placeholder=\"Seleccionar persona encargada\" selectLabel=\"Presione para seleccionar\"\n                                                                    selectedLabel=\"Seleccionado\"\n                                                                    deselectLabel=\"Presione para deseleccionar\"\n                                                                    :allow-empty=\"true\" :disabled=\"aux_unit_id == null\">\n                                                                </multiselect>\n                                                            </b-field>\n                                                        </div>\n\n                                                    </div>\n\n\n                                                    <b-field grouped position=\"is-right\">\n                                                        <p class=\"control\">\n                                                            <b-button label=\"Guardar\" type=\"is-info\"\n                                                                @click=\"confirmeditDes()\" />\n                                                        </p>\n                                                    </b-field>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </b-tab-item>\n                                </b-tabs>\n                            </div>\n                        </div>\n                        <div v-else>\n                            <p>Loading</p>\n                        </div>\n                    </div>\n                </b-tabs>\n            </section>\n        </div>\n    </section>\n</template>\n\n\n<script>\nimport axios from \"axios\";\nimport IndexBuildings from \"./index_building.vue\";\nimport moment from \"moment\";\nexport default {\n  name: \"edit_building\",\n  props: [\"queryType\", \"modalHeader\", \"buildingId\", \"id\"],\n  components: {\n    \"index-building\": IndexBuildings,\n    },\n\n    data() {\n        return {\n            building: null,\n            buildings: [],\n            props: [\"id\"],\n            units: [],\n            managers: [],\n            aux_unit_id: null,\n            aux_duty_manager_id: null,\n        };\n    },\n    methods: {\n        async getbuilding() {\n            const response = await axios.get(\"/buildings/\" + this.id + \".json\");\n            this.loading = true;\n            this.building = response.data;\n        },\n\n        async getunitactive() {\n            const response = await axios.get(\"/units/showactiveunit.json\");\n            this.units = response.data;\n        },\n\n        async getdutymanagerbyunit(item) {\n            const response = await axios.get(\n                \"http://localhost:3000/duty_managers/showdutymanagerunit/\" +\n                item +\n                \".json\"\n            );\n            this.managers = response.data;\n        },\n\n        async getbuildingbyunit(item) {\n            const response = await axios.get(\n                \"http://localhost:3000/buildings/showbuildingunit/\" + item + \".json\"\n            );\n            this.buildings = response.data;\n        },\n\n        async getofficebybuilding(item) {\n            const response = await axios.get(\n                \"http://localhost:3000/offices/showofficebuilding/\" + item + \".json\"\n            );\n            this.offices = response.data;\n        },\n\n        \n        //Funciones para editar datos del edificio\n        confirmedit() {\n            this.$buefy.dialog.confirm({\n                title: \"Editar el edificio\",\n                message: `¿Esta seguro de editar el edificio?`,\n                cancelText: \"Cancelar\",\n                confirmText: \"Guardar\",\n                type: \"is-info\",\n                onConfirm: () => this.EditClick(),\n            });\n        },\n\n        async EditClick() {\n            const response = await axios.put(\"/buildings/\" + this.id + \".json\", {\n                name_building: this.building.name_building,\n                identification_number_building: this.building.identification_number_building,\n                location_building: this.building.location_building,\n            });\n            window.location.href = \"/buildings/\" + this.id;\n        },\n\n\n        //Funciones para editar cargos del edificio\n        \n        confirmeditDes() {\n            this.$buefy.dialog.confirm({\n                title: \"Editar el edificio\",\n                message: `¿Esta seguro de editar el edificio?`,\n                cancelText: \"Cancelar\",\n                confirmText: \"Guardar\",\n                type: \"is-info\",\n                onConfirm: () => this.getofficebybuilding(),\n            });\n        },\n\n        async getofficebybuilding() {\n      const response = await axios.get(\n        \"/offices/showofficebuilding/\" + this.id + \".json\"\n        );\n      this.offices_building = response.data;\n      if (this.offices_building.length == 0) {\n        console.log(this.aux_unit_id);\n        console.log(this.aux_duty_manager_id);\n        this.EditClickDes();\n        }\n        else{\n          this.$buefy.dialog.alert({\n                    title: 'No se puede cambiar designación',\n                    type: 'is-danger',\n                    message: 'Existen dependencias designados en el edificio',\n                    confirmText: 'Aceptar'\n                })\n        }\n    },\n    async EditClickDes() {\n            const response = await axios.put(\"/buildings/\" + this.id + \".json\", {\n                duty_manager_id: this.aux_duty_manager_id,\n                unit_id: this.aux_unit_id,\n                activegood: 1,\n            });\n            console.log(this.aux_unit_id);\n            window.location.href = \"/buildings\";\n        },\n\n\n    },\n    created() {\n        this.getbuilding();\n        this.getunitactive();\n    },\n};\n</script>\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}