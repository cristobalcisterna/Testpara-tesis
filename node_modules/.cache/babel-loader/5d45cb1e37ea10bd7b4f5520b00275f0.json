{"ast":null,"code":"function _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport axios from \"axios\";\nexport default {\n  name: \"new_office\",\n  props: ['queryType', 'modalHeader'],\n  data: function data() {\n    return {\n      selected: null,\n      units: [],\n      buildings: [],\n      managers: [],\n      offices: [],\n      aux_name_office: null,\n      aux_identification_number_office: null,\n      aux_location: null,\n      aux_office_description: null,\n      aux_hours_available: null,\n      aux_square_meter: null,\n      aux_campus_identification: null,\n      aux_duty_manager_id: null,\n      aux_building_id: null,\n      aux_unit_id: null,\n      aux_active: 1\n    };\n  },\n  methods: {\n    getunit: function getunit() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"/units/showactiveunit.json\");\n\n              case 2:\n                response = _context.sent;\n                _this.units = response.data;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    getdutymanagerbyunit: function getdutymanagerbyunit(item) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get(\"http://localhost:3000/duty_managers/showdutymanagerunit/\" + item + \".json\");\n\n              case 2:\n                response = _context2.sent;\n                _this2.managers = response.data;\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    getbuildingbyunit: function getbuildingbyunit(item) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios.get(\"http://localhost:3000/buildings/showbuildingunit/\" + item + \".json\");\n\n              case 2:\n                response = _context3.sent;\n                _this3.buildings = response.data;\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    createClick: function createClick() {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return axios.post(\"/offices.json\", {\n                  name_office: _this4.aux_name_office,\n                  identification_number_office: _this4.aux_identification_number_office,\n                  location: _this4.aux_location,\n                  office_description: _this4.aux_office_description,\n                  hours_available: _this4.aux_hours_available,\n                  square_meter: _this4.aux_square_meter,\n                  campus_identification: _this4.aux_campus_identification,\n                  duty_manager_id: _this4.aux_duty_manager_id,\n                  building_id: _this4.aux_building_id,\n                  active_office: _this4.aux_active\n                });\n\n              case 2:\n                response = _context4.sent;\n                window.location.href = \"/offices\";\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    confirmregister: function confirmregister() {\n      var _this5 = this;\n\n      this.$buefy.dialog.confirm({\n        title: \"Registrar Dependencia\",\n        message: \"\\xBFEsta seguro de registrar esta dependencia?\",\n        cancelText: \"Cancelar\",\n        confirmText: \"Registrar\",\n        type: \"is-info\",\n        onConfirm: function onConfirm() {\n          return _this5.createClick();\n        }\n      });\n    },\n    check: function check() {\n      var _this6 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var valid;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return _this6.$refs.observer.validate();\n\n              case 2:\n                valid = _context5.sent;\n\n                if (!valid) {\n                  _this6.$buefy.dialog.alert({\n                    message: 'Algunos campos presentan errores.',\n                    type: 'is-danger',\n                    hasIcon: true,\n                    icon: 'times-circle',\n                    iconPack: 'fa',\n                    ariaRole: 'alertdialog',\n                    ariaModal: true\n                  });\n                } else {\n                  _this6.confirmregister();\n                }\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    }\n  },\n  created: function created() {\n    this.getunit();\n  }\n};","map":{"version":3,"mappings":"+CAwOA,oJ;;;;;;AAAA;AACA;EACAA,kBADA;EAEAC,QACA,WADA,EACA,aADA,CAFA;EAKAC,IALA,kBAKA;IACA;MACAC,cADA;MAEAC,SAFA;MAGAC,aAHA;MAIAC,YAJA;MAKAC,WALA;MAMAC,qBANA;MAOAC,sCAPA;MAQAC,kBARA;MASAC,4BATA;MAUAC,yBAVA;MAWAC,sBAXA;MAYAC,+BAZA;MAaAC,yBAbA;MAcAC,qBAdA;MAeAC,iBAfA;MAgBAC;IAhBA;EAkBA,CAxBA;EAyBAC;IACAC,OADA,qBACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC,uCADA;;cAAA;gBACAC,QADA;gBAEA;;cAFA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAGA,CAJA;IAMAC,oBANA,gCAMAC,IANA,EAMA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAH,UACA,6DACAG,IADA,GAEA,OAHA,CADA;;cAAA;gBACAF,QADA;gBAMA;;cANA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAOA,CAbA;IAeAG,iBAfA,6BAeAD,IAfA,EAeA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAH,UACA,oEADA,CADA;;cAAA;gBACAC,QADA;gBAIA;;cAJA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAKA,CApBA;IAsBAI,WAtBA,yBAsBA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAL;kBACAM,mCADA;kBAEAC,qEAFA;kBAGAC,6BAHA;kBAIAC,iDAJA;kBAKAC,2CALA;kBAMAC,qCANA;kBAOAC,uDAPA;kBAQAC,2CARA;kBASAC,mCATA;kBAUAC;gBAVA,EADA;;cAAA;gBACAd,QADA;gBAaAe;;cAbA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAcA,CApCA;IAqCAC,eArCA,6BAqCA;MAAA;;MACA;QACAC,8BADA;QAEAC,yDAFA;QAGAC,sBAHA;QAIAC,wBAJA;QAKAC,eALA;QAMAC;UAAA;QAAA;MANA;IAQA,CA9CA;IA+CAC,KA/CA,mBA+CA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA,gCADA;;cAAA;gBACAC,KADA;;gBAEA;kBAAA,2BACA;oBAAAN;oBAAAG;oBACAI,aADA;oBACAC,oBADA;oBACAC,cADA;oBACAC,uBADA;oBACAC;kBADA,CADA;gBAGA,CAHA,MAIA;kBACA;gBACA;;cARA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IASA;EAxDA,CAzBA;EAmFAC,OAnFA,qBAmFA;IACA;EACA;AArFA","names":["name","props","data","selected","units","buildings","managers","offices","aux_name_office","aux_identification_number_office","aux_location","aux_office_description","aux_hours_available","aux_square_meter","aux_campus_identification","aux_duty_manager_id","aux_building_id","aux_unit_id","aux_active","methods","getunit","axios","response","getdutymanagerbyunit","item","getbuildingbyunit","createClick","name_office","identification_number_office","location","office_description","hours_available","square_meter","campus_identification","duty_manager_id","building_id","active_office","window","confirmregister","title","message","cancelText","confirmText","type","onConfirm","check","valid","hasIcon","icon","iconPack","ariaRole","ariaModal","created"],"sourceRoot":"app/javascript/components/office","sources":["new_office.vue"],"sourcesContent":["<template>\n  <section>\n    <ValidationObserver v-slot=\"{ handleSubmit }\" ref=\"observer\" >\n      <form @submit.prevent=\"handleSubmit(confirmregister())\" >\n    <div class=\"modal-card\" style=\"width: 62em; height: auto\">\n    <header class=\"modal-card-head\">\n      <p class=\"modal-card-title\">{{modalHeader}}</p>\n      <button\n          type=\"button\"\n          class=\"delete\"\n          @click=\"$emit('close')\"/>\n    </header>\n    <section class=\"modal-card-body\" ref=\"newOffice\">\n     \n      <div class=\"box\" >\n\n        <div class=\"columns is-centered\">\n          <div class=\"column is-centered\">\n\n\n\n\n            <div class=\"columns\">\n              <div class=\"column\">\n                <b-field label=\"Nombre de dependencia\" >\n                  <ValidationProvider name=\"nombre\" rules=\"required\" v-slot=\"{ errors }\">\n                  <b-input\n                    v-model=\"aux_name_office\"\n                    placeholder=\"Ingrese el nombre de la dependencia o como se identifica\"\n                  ></b-input>\n                  <span class=\"validation-alert\">{{ errors[0] }}</span>\n                  </ValidationProvider>\n                </b-field>\n              </div>\n               <div class=\"column\">\n                <b-field label=\"Ubicación\" >\n                  <ValidationProvider name=\"nombre\" rules=\"required\" v-slot=\"{ errors }\">\n                  <b-input\n                    v-model=\"aux_location\"\n                    placeholder=\"Ingrese la ubicación de la dependencia (Edificio, en que piso se encuentra..)\"\n                  ></b-input>\n                  <span class=\"validation-alert\">{{ errors[0] }}</span>\n                  </ValidationProvider>\n                </b-field>\n              </div>\n\n\n\n            </div>\n            <div class=\"columns\">\n                            <div class=\"column\">\n                <b-field label=\"N° Identificación\" >\n                  <ValidationProvider name=\"nombre\" rules=\"required\" v-slot=\"{ errors }\">\n                  <b-input\n                    v-model=\"aux_identification_number_office\"\n                    placeholder=\"Ingrese el numero de identificación de la dependencia\"\n                  ></b-input>\n                  <span class=\"validation-alert\">{{ errors[0] }}</span>\n                  </ValidationProvider>\n                </b-field>\n              </div>\n                            <div class=\"column\">\n                <b-field\n                  label=\"Identificación administración campus\"\n                  \n                >\n                <ValidationProvider name=\"nombre\" rules=\"required\" v-slot=\"{ errors }\">\n                  <b-input\n                    v-model=\"aux_campus_identification\"\n                    placeholder=\"Ingrese el numero de identificación de la dependencia\"\n                  ></b-input>\n                  <span class=\"validation-alert\">{{ errors[0] }}</span>\n                  </ValidationProvider>\n                </b-field>\n              </div>\n\n             \n\n\n            </div>\n\n\n            <div class=\"columns\">\n\n              <div class=\"column\">\n                <b-field label=\"Horas semanales disponibles\" >\n                  <ValidationProvider name=\"nombre\" rules=\"required\" v-slot=\"{ errors }\">\n                  <b-numberinput\n                    min=\"1\"\n                    max=\"100\"\n                    v-model=\"aux_hours_available\"\n                    type=\"is-info\"\n                    placeholder=\"Ingrese la cantidad de horas semanales disponibles de la dependencia\"\n                  >\n                  </b-numberinput>\n                  <span class=\"validation-alert\">{{ errors[0] }}</span>\n                  </ValidationProvider>\n                </b-field>\n              </div>\n\n              <div class=\"column\">\n                <b-field label=\"Metros cuadrados\" >\n                  <ValidationProvider name=\"nombre\" rules=\"required\" v-slot=\"{ errors }\">\n                  <b-numberinput\n                    min=\"1\"\n                    max=\"100\"\n                    v-model=\"aux_square_meter\"\n                    type=\"is-info\"\n                    placeholder=\"Ingrese cuantos metro cuadrados tiene la dependencia\"\n                  >\n                  </b-numberinput>\n                  <span class=\"validation-alert\">{{ errors[0] }}</span>\n                  </ValidationProvider>\n                </b-field>\n              </div>\n\n              \n            </div>\n               <div class=\"columns\">\n   \n              <div class=\"column\">\n               \n\n                <b-field label=\"Unidad\" >\n                  <ValidationProvider name=\"nombre\" rules=\"required\" v-slot=\"{ errors }\">\n                  <multiselect\n                    v-model=\"aux_unit_id\"\n                    :options=\"units.map((type) => type.id)\"\n                    :custom-label=\"\n                      (opt) => units.find((x) => x.id === opt).name_unit\n                    \"\n                    placeholder=\"Seleccionar Unidad\"\n                     selectLabel=\"\"\n                    selectedLabel=\"Seleccionado\"\n                    deselectLabel=\"Presione para deseleccionar\"\n                    :allow-empty=\"true\"\n                    :disabled=\"aux_duty_manager_id !== null || aux_building_id !== null \"\n                    @input=\"\n                      getdutymanagerbyunit(aux_unit_id);\n                      getbuildingbyunit(aux_unit_id);\n                    \"\n                  >\n                  </multiselect>\n                  <span class=\"validation-alert\">{{ errors[0] }}</span>\n                  </ValidationProvider>\n                </b-field>\n              </div>\n\n            </div>\n            <div class=\"columns\">\n                            <div class=\"column\">\n                <b-field label=\"Edificio\" >\n                  <ValidationProvider name=\"nombre\" rules=\"required\" v-slot=\"{ errors }\">\n                  <multiselect\n                    v-model=\"aux_building_id\"\n                    :options=\"buildings.map((type) => type.id)\"\n                    :custom-label=\"\n                      (opt) => buildings.find((x) => x.id === opt).name_building\n                    \"\n                    placeholder=\"Seleccionar Unidad\"\n                    selectedLabel=\"Seleccionado\"\n                    deselectLabel=\"Presione para deseleccionar\"\n                    :allow-empty=\"true\"\n                    :disabled=\"aux_unit_id == null\"\n                  >\n                    \n                  </multiselect>\n                  <span class=\"validation-alert\">{{ errors[0] }}</span>\n                  </ValidationProvider>\n                </b-field>\n              </div>\n              <div class=\"column\">\n                <b-field label=\"Persona encargada\" >\n                  <ValidationProvider name=\"nombre\" rules=\"required\" v-slot=\"{ errors }\">\n                  <multiselect\n                    v-model=\"aux_duty_manager_id\"\n                    :options=\"managers.map((type) => type.id)\"\n                    :custom-label=\"\n                      (opt) =>\n                        managers.find((x) => x.id === opt).name_duty_manager\n                    \"\n                    placeholder=\"Seleccionar Persona encargada\"\n                    selectLabel=\"Presione para seleccionar\"\n                    selectedLabel=\"Seleccionado\"\n                    deselectLabel=\"Presione para deseleccionar\"\n                    :allow-empty=\"true\"\n                    :disabled=\"aux_unit_id == null\"\n                  >\n                  </multiselect>\n                  <span class=\"validation-alert\">{{ errors[0] }}</span>\n                  </ValidationProvider>\n                </b-field>\n              </div>\n            </div>\n                        <div class=\"columns\">\n\n              <div class=\"column\">\n                <b-field label=\"Descripción de dependencia\" >\n                  <ValidationProvider name=\"nombre\" rules=\"required\" v-slot=\"{ errors }\">\n                  <b-input\n                    v-model=\"aux_office_description\"\n                    type=\"textarea\"\n                    placeholder=\"Ingrese la descripción de la dependencia, indicando cual es su uso\"\n                  ></b-input>\n                  <span class=\"validation-alert\">{{ errors[0] }}</span>\n                  </ValidationProvider>\n                </b-field>\n              </div>\n\n\n                        </div>\n\n\n            <b-field grouped position=\"is-right\" >\n              <p class=\"control\">\n                <b-button\n                  label=\"Agregar dependencia\"\n                  type=\"is-info\"\n                  @click=\"check()\"\n                />\n              </p>\n            </b-field>\n          </div>\n        </div>\n        </div>\n    </section></div>\n  </form>\n </ValidationObserver>\n  </section>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  name:\"new_office\",\n  props:[\n    'queryType', 'modalHeader'\n  ],\n  data() {\n    return {\n      selected: null,\n      units: [],\n      buildings: [],\n      managers: [],\n      offices: [],\n      aux_name_office: null,\n      aux_identification_number_office: null,\n      aux_location: null,\n      aux_office_description: null,\n      aux_hours_available: null,\n      aux_square_meter: null,\n      aux_campus_identification: null,\n      aux_duty_manager_id: null,\n      aux_building_id: null,\n      aux_unit_id: null,\n      aux_active: 1,\n    };\n  },\n  methods: {\n    async getunit() {\n      const response = await axios.get(\"/units/showactiveunit.json\");\n      this.units = response.data;\n    },\n\n    async getdutymanagerbyunit(item) {\n      const response = await axios.get(\n        \"http://localhost:3000/duty_managers/showdutymanagerunit/\" +\n          item +\n          \".json\"\n      );\n      this.managers = response.data;\n    },\n\n    async getbuildingbyunit(item) {\n      const response = await axios.get(\n        \"http://localhost:3000/buildings/showbuildingunit/\" + item + \".json\"\n      );\n      this.buildings = response.data;\n    },\n\n    async createClick() {\n      const response = await axios.post(\"/offices.json\", {\n        name_office: this.aux_name_office,\n        identification_number_office: this.aux_identification_number_office,\n        location: this.aux_location,\n        office_description: this.aux_office_description,\n        hours_available: this.aux_hours_available,\n        square_meter: this.aux_square_meter,\n        campus_identification: this.aux_campus_identification,\n        duty_manager_id: this.aux_duty_manager_id,\n        building_id: this.aux_building_id,\n        active_office: this.aux_active,\n      });\n      window.location.href = \"/offices\";\n    },\n    confirmregister() {\n      this.$buefy.dialog.confirm({\n        title: \"Registrar Dependencia\",\n        message: `¿Esta seguro de registrar esta dependencia?`,\n        cancelText: \"Cancelar\",\n        confirmText: \"Registrar\",\n        type: \"is-info\",\n        onConfirm: () => this.createClick(),\n      });\n    },\n    async check(){\n      const valid = await this.$refs.observer.validate() \n    if(!valid){ this.$buefy.dialog.alert(\n      { message: 'Algunos campos presentan errores.', type: 'is-danger', \n    hasIcon: true, icon: 'times-circle', iconPack: 'fa', ariaRole: 'alertdialog', ariaModal: true }\n    ) } \n    else{\n      this.confirmregister();\n    }\n    },\n  },\n  created() {\n    this.getunit();\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}