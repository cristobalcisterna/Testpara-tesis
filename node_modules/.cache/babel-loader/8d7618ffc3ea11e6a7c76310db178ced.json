{"ast":null,"code":"import { _ as _defineProperty } from './chunk-455cdeae.js';\nimport './helpers.js';\nimport { c as config } from './chunk-e92e3389.js';\nimport { I as Icon } from './chunk-7e17a637.js';\nimport { _ as __vue_normalize__, r as registerComponent, u as use } from './chunk-cca88db8.js';\nvar script = {\n  name: 'BRate',\n  components: _defineProperty({}, Icon.name, Icon),\n  props: {\n    value: {\n      type: Number,\n      \"default\": 0\n    },\n    max: {\n      type: Number,\n      \"default\": 5\n    },\n    icon: {\n      type: String,\n      \"default\": 'star'\n    },\n    iconPack: String,\n    size: String,\n    spaced: Boolean,\n    rtl: Boolean,\n    disabled: Boolean,\n    showScore: Boolean,\n    showText: Boolean,\n    customText: String,\n    texts: Array,\n    locale: {\n      type: [String, Array],\n      \"default\": function _default() {\n        return config.defaultLocale;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      newValue: this.value,\n      hoverValue: 0\n    };\n  },\n  computed: {\n    halfStyle: function halfStyle() {\n      return \"width:\".concat(this.valueDecimal, \"%\");\n    },\n    showMe: function showMe() {\n      var result = '';\n\n      if (this.showScore) {\n        result = this.disabled ? this.value : this.newValue;\n\n        if (result === 0) {\n          result = '';\n        } else {\n          result = new Intl.NumberFormat(this.locale).format(this.value);\n        }\n      } else if (this.showText) {\n        result = this.texts[Math.ceil(this.newValue) - 1];\n      }\n\n      return result;\n    },\n    valueDecimal: function valueDecimal() {\n      return this.value * 100 - Math.floor(this.value) * 100;\n    }\n  },\n  watch: {\n    // When v-model is changed set the new value.\n    value: function value(_value) {\n      this.newValue = _value;\n    }\n  },\n  methods: {\n    resetNewValue: function resetNewValue() {\n      if (this.disabled) return;\n      this.hoverValue = 0;\n    },\n    previewRate: function previewRate(index, event) {\n      if (this.disabled) return;\n      this.hoverValue = index;\n      event.stopPropagation();\n    },\n    confirmValue: function confirmValue(index) {\n      if (this.disabled) return;\n      this.newValue = index;\n      this.$emit('change', this.newValue);\n      this.$emit('input', this.newValue);\n    },\n    checkHalf: function checkHalf(index) {\n      var showWhenDisabled = this.disabled && this.valueDecimal > 0 && index - 1 < this.value && index > this.value;\n      return showWhenDisabled;\n    },\n    rateClass: function rateClass(index) {\n      var output = '';\n      var currentValue = this.hoverValue !== 0 ? this.hoverValue : this.newValue;\n\n      if (index <= currentValue) {\n        output = 'set-on';\n      } else if (this.disabled && Math.ceil(this.value) === index) {\n        output = 'set-half';\n      }\n\n      return output;\n    }\n  }\n};\n/* script */\n\nvar __vue_script__ = script;\n/* template */\n\nvar __vue_render__ = function __vue_render__() {\n  var _vm = this;\n\n  var _h = _vm.$createElement;\n\n  var _c = _vm._self._c || _h;\n\n  return _c('div', {\n    staticClass: \"rate\",\n    \"class\": {\n      'is-disabled': _vm.disabled,\n      'is-spaced': _vm.spaced,\n      'is-rtl': _vm.rtl\n    }\n  }, [_vm._l(_vm.max, function (item, index) {\n    return _c('div', {\n      key: index,\n      staticClass: \"rate-item\",\n      \"class\": _vm.rateClass(item),\n      on: {\n        \"mousemove\": function mousemove($event) {\n          return _vm.previewRate(item, $event);\n        },\n        \"mouseleave\": _vm.resetNewValue,\n        \"click\": function click($event) {\n          $event.preventDefault();\n          return _vm.confirmValue(item);\n        }\n      }\n    }, [_c('b-icon', {\n      attrs: {\n        \"pack\": _vm.iconPack,\n        \"icon\": _vm.icon,\n        \"size\": _vm.size\n      }\n    }), _vm.checkHalf(item) ? _c('b-icon', {\n      staticClass: \"is-half\",\n      style: _vm.halfStyle,\n      attrs: {\n        \"pack\": _vm.iconPack,\n        \"icon\": _vm.icon,\n        \"size\": _vm.size\n      }\n    }) : _vm._e()], 1);\n  }), _vm.showText || _vm.showScore || _vm.customText ? _c('div', {\n    staticClass: \"rate-text\",\n    \"class\": _vm.size\n  }, [_c('span', [_vm._v(_vm._s(_vm.showMe))]), _vm.customText && !_vm.showText ? _c('span', [_vm._v(_vm._s(_vm.customText))]) : _vm._e()]) : _vm._e()], 2);\n};\n\nvar __vue_staticRenderFns__ = [];\n/* style */\n\nvar __vue_inject_styles__ = undefined;\n/* scoped */\n\nvar __vue_scope_id__ = undefined;\n/* module identifier */\n\nvar __vue_module_identifier__ = undefined;\n/* functional template */\n\nvar __vue_is_functional_template__ = false;\n/* style inject */\n\n/* style inject SSR */\n\nvar Rate = __vue_normalize__({\n  render: __vue_render__,\n  staticRenderFns: __vue_staticRenderFns__\n}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, undefined, undefined);\n\nvar Plugin = {\n  install: function install(Vue) {\n    registerComponent(Vue, Rate);\n  }\n};\nuse(Plugin);\nexport default Plugin;\nexport { Rate as BRate };","map":null,"metadata":{},"sourceType":"module"}