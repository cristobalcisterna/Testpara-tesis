{"ast":null,"code":"import { _ as _defineProperty } from './chunk-455cdeae.js';\nimport { c as config } from './chunk-e92e3389.js';\nimport { I as Icon } from './chunk-7e17a637.js';\nimport { _ as __vue_normalize__ } from './chunk-cca88db8.js';\nvar script = {\n  name: 'BButton',\n  components: _defineProperty({}, Icon.name, Icon),\n  inheritAttrs: false,\n  props: {\n    type: [String, Object],\n    size: String,\n    label: String,\n    iconPack: String,\n    iconLeft: String,\n    iconRight: String,\n    rounded: {\n      type: Boolean,\n      \"default\": function _default() {\n        return config.defaultButtonRounded;\n      }\n    },\n    loading: Boolean,\n    outlined: Boolean,\n    expanded: Boolean,\n    inverted: Boolean,\n    focused: Boolean,\n    active: Boolean,\n    hovered: Boolean,\n    selected: Boolean,\n    nativeType: {\n      type: String,\n      \"default\": 'button',\n      validator: function validator(value) {\n        return ['button', 'submit', 'reset'].indexOf(value) >= 0;\n      }\n    },\n    tag: {\n      type: String,\n      \"default\": 'button',\n      validator: function validator(value) {\n        return config.defaultLinkTags.indexOf(value) >= 0;\n      }\n    }\n  },\n  computed: {\n    computedTag: function computedTag() {\n      if (this.$attrs.disabled !== undefined && this.$attrs.disabled !== false) {\n        return 'button';\n      }\n\n      return this.tag;\n    },\n    iconSize: function iconSize() {\n      if (!this.size || this.size === 'is-medium') {\n        return 'is-small';\n      } else if (this.size === 'is-large') {\n        return 'is-medium';\n      }\n\n      return this.size;\n    }\n  }\n};\n/* script */\n\nvar __vue_script__ = script;\n/* template */\n\nvar __vue_render__ = function __vue_render__() {\n  var _vm = this;\n\n  var _h = _vm.$createElement;\n\n  var _c = _vm._self._c || _h;\n\n  return _c(_vm.computedTag, _vm._g(_vm._b({\n    tag: \"component\",\n    staticClass: \"button\",\n    \"class\": [_vm.size, _vm.type, {\n      'is-rounded': _vm.rounded,\n      'is-loading': _vm.loading,\n      'is-outlined': _vm.outlined,\n      'is-fullwidth': _vm.expanded,\n      'is-inverted': _vm.inverted,\n      'is-focused': _vm.focused,\n      'is-active': _vm.active,\n      'is-hovered': _vm.hovered,\n      'is-selected': _vm.selected\n    }],\n    attrs: {\n      \"type\": _vm.computedTag === 'button' ? _vm.nativeType : undefined\n    }\n  }, 'component', _vm.$attrs, false), _vm.$listeners), [_vm.iconLeft ? _c('b-icon', {\n    attrs: {\n      \"pack\": _vm.iconPack,\n      \"icon\": _vm.iconLeft,\n      \"size\": _vm.iconSize\n    }\n  }) : _vm._e(), _vm.label ? _c('span', [_vm._v(_vm._s(_vm.label))]) : _vm.$slots[\"default\"] ? _c('span', [_vm._t(\"default\")], 2) : _vm._e(), _vm.iconRight ? _c('b-icon', {\n    attrs: {\n      \"pack\": _vm.iconPack,\n      \"icon\": _vm.iconRight,\n      \"size\": _vm.iconSize\n    }\n  }) : _vm._e()], 1);\n};\n\nvar __vue_staticRenderFns__ = [];\n/* style */\n\nvar __vue_inject_styles__ = undefined;\n/* scoped */\n\nvar __vue_scope_id__ = undefined;\n/* module identifier */\n\nvar __vue_module_identifier__ = undefined;\n/* functional template */\n\nvar __vue_is_functional_template__ = false;\n/* style inject */\n\n/* style inject SSR */\n\nvar Button = __vue_normalize__({\n  render: __vue_render__,\n  staticRenderFns: __vue_staticRenderFns__\n}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, undefined, undefined);\n\nexport { Button as B };","map":null,"metadata":{},"sourceType":"module"}