{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  name: \"show_building\",\n  props: [\"id\", 'queryType', 'modalHeader', 'buildingId'],\n  data: function data() {\n    return {\n      offices: [],\n      building: null,\n      props: [\"id\"]\n    };\n  },\n  methods: {\n    getoffices: function getoffices() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"/offices/showofficebuilding/\" + _this.buildingId + \".json\");\n\n              case 2:\n                response = _context.sent;\n                _this.offices = response.data;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    Clickshowoffice: function Clickshowoffice(item) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                response = window.location.href = \"/offices/\" + item;\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    Clickshowbuilding: function Clickshowbuilding(item) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                response = window.location.href = \"/buildings/\" + item;\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    Clickshowdutymanager: function Clickshowdutymanager(item) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                response = window.location.href = \"/duty_managers/\" + item;\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    Clickshowunit: function Clickshowunit(item) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                response = window.location.href = \"/units/\" + item;\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    },\n    getbuildings: function getbuildings() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return axios.get(\"/buildings/\" + _this2.buildingId + \".json\");\n\n              case 2:\n                response = _context6.sent;\n                _this2.building = response.data;\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    }\n  },\n  created: function created() {\n    this.getbuildings();\n    this.getoffices();\n  }\n};","map":{"version":3,"sources":["show_building.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4PA,OAAA,KAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,KAAA,EAAA,CAAA,IAAA,EAAA,WAAA,EAAA,aAAA,EAAA,YAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,IAFA;AAGA,MAAA,KAAA,EAAA,CAAA,IAAA;AAHA,KAAA;AAKA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,GAAA,CACA,iCAAA,KAAA,CAAA,UAAA,GAAA,OADA,CADA;;AAAA;AACA,gBAAA,QADA;AAIA,gBAAA,KAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA;;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,KANA;AAOA,IAAA,eAPA,2BAOA,IAPA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,QADA,GACA,MAAA,CAAA,QAAA,CAAA,IAAA,GAAA,cAAA,IADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,KATA;AAUA,IAAA,iBAVA,6BAUA,IAVA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,QADA,GACA,MAAA,CAAA,QAAA,CAAA,IAAA,GAAA,gBAAA,IADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,KAZA;AAaA,IAAA,oBAbA,gCAaA,IAbA,EAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,QADA,GACA,MAAA,CAAA,QAAA,CAAA,IAAA,GAAA,oBAAA,IADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,KAfA;AAgBA,IAAA,aAhBA,yBAgBA,IAhBA,EAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,QADA,GACA,MAAA,CAAA,QAAA,CAAA,IAAA,GAAA,YAAA,IADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,KAlBA;AAoBA,IAAA,YApBA,0BAoBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,GAAA,CACA,gBAAA,MAAA,CAAA,UAAA,GAAA,OADA,CADA;;AAAA;AACA,gBAAA,QADA;AAIA,gBAAA,MAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA;;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAzBA,GAVA;AAsCA,EAAA,OAtCA,qBAsCA;AACA,SAAA,YAAA;AACA,SAAA,UAAA;AACA;AAzCA,CAAA","sourcesContent":["<template>\n  <section class=\"b-tooltips\">\n    <div class=\"box\" style=\"margin-top: 60px; margin-left: 300px; margin-right: 300px\">\n       \n      <h1>Detalle del Edificio</h1>\n        <b-tabs type=\"is-boxed\" position=\"is-centered\">\n\n         <b-tab-item label=\"Detalle del Edificio\">\n          <div class=\"center\"><h1>Información del Edificio</h1></div>\n           <div class=\"box\" style=\"margin-top: 60px; margin-left: 100px; margin-right: 100px;\">\n            \n      <div v-if=\"building\" class=\"columns is-centered\">\n     \n \n        <div class=\"column is-centered\">\n\n          <div class=\"columns\">\n            <div class=\"column\">\n              <b-field label=\"Nombre edificio:\">\n                 <b-input\n                    v-model=\"building.name_building \" type=\"text\" readonly\n                  ></b-input>\n              </b-field>\n            </div>\n            </div>\n <div class=\"columns\">\n            <div class=\"column\">\n              <b-field label=\"Numero identificación del edificio:\">\n                 <b-input\n                    v-model=\"building.identification_number_building\" type=\"text\" readonly\n                  ></b-input>\n              </b-field>\n            </div>\n        </div>\n             <div class=\"columns\">\n            <div class=\"column\">\n              <b-field label=\"Ubicación:\">\n                 <b-input\n                    v-model=\"building.location_building\" type=\"text\" readonly\n                  ></b-input>\n              </b-field>\n            </div>    \n             </div>\n          \n\n          <div class=\"columns\">\n            <div class=\"column\">\n              <b-field label=\"Unidad: \">\n                 <b-input\n                  icon=\"eye\"\n                icon-clickable\n                @icon-click=\"Clickshowunit(building.unit_id)\"\n                    v-model=\"building.unit.name_unit\" type=\"text\" readonly\n                  ></b-input>\n              </b-field>\n            </div>\n                      </div>\n                       <div class=\"columns\">\n            <div class=\"column\">\n              <b-field label=\"Persona encargada: \">\n                 <b-input\n                 icon=\"eye\"\n                icon-clickable\n                @icon-click=\"Clickshowdutymanager(building.duty_manager_id)\"\n                    v-model=\"building.duty_manager.name_duty_manager\" type=\"text\" readonly\n                  ></b-input>\n              </b-field>\n            </div>\n                       </div>\n\n\n         \n        </div>\n\n      </div>\n\n      <div v-else>\n        <p>Loading</p>\n      </div>\n\n</div>\n</b-tab-item>\n\n\n\n\n\n\n\n   \n           <b-tab-item label=\"Dependencias del edificio\">\n             <div class=\"center\">\n      <h1>Dependencias del edificio</h1></div>\n\n\n          <div class=\"column\">\n            <b-table\n              :data=\"offices\"\n              :paginated=\"true\"\n              per-page=\"8\"\n              striped\n              hoverable\n              :pagination-simple=\"false\"\n              pagination-position=\"bottom\"\n              default-sort-direction=\"asc\"\n              sort-icon=\"arrow-up\"\n              sort-icon-size=\"is-small\"\n              default-sort=\"inventores.name\"\n              aria-next-label=\"Siguiente\"\n              aria-previous-label=\"Anterior\"\n              aria-page-label=\"Página\"\n              aria-current-label=\"Página actual\"\n            >\n              <b-table-column\n                :visible=\"false\"\n                field=\"id\"\n                label=\"ID\"\n                sortable\n                searchable\n              >\n                <template slot=\"searchable\" slot-scope=\"props\">\n                  <b-input\n                    v-model=\"props.filters[props.column.field]\"\n                    placeholder=\" Buscar\"\n                    icon=\"search\"\n                    size=\"is-small\"\n                  />\n                </template>\n                <template v-slot=\"props\">\n                  {{ props.row.id }}\n                </template>\n              </b-table-column>\n\n              <b-table-column\n                field=\"name_office\"\n                label=\"Nombre dependencia\"\n                sortable\n                searchable\n              >\n                <template slot=\"searchable\" slot-scope=\"props\">\n                  <b-input\n                    v-model=\"props.filters[props.column.field]\"\n                    placeholder=\" Buscar\"\n                    size=\"is-small\"\n                  />\n                </template>\n                <template v-slot=\"props\">\n                 <a href=\"#\" @click=\"Clickshowoffice(props.row.id)\">{{ props.row.name_office }}</a>\n              \n                </template>\n              </b-table-column>\n\n              <b-table-column\n                field=\"identification_number_office\"\n                label=\"N° Identificación\"\n                sortable\n                searchable\n              >\n                <template slot=\"searchable\" slot-scope=\"props\">\n                  <b-input\n                    v-model=\"props.filters[props.column.field]\"\n                    placeholder=\" Buscar\"\n                    size=\"is-small\"\n                  />\n                </template>\n                <template v-slot=\"props\">\n                  {{ props.row.identification_number_office }}\n                </template>\n              </b-table-column>\n\n              <b-table-column\n                field=\"duty_manager.name_duty_manager\"\n                label=\"Nombre persona encargada\"\n                sortable\n                searchable\n              >\n                <template slot=\"searchable\" slot-scope=\"props\">\n                  <b-input\n                    v-model=\"props.filters[props.column.field]\"\n                    placeholder=\" Buscar\"\n                    size=\"is-small\"\n                  />\n                </template>\n                <template v-slot=\"props\">\n                  <a href=\"#\" @click=\"Clickshowdutymanager(props.row.duty_manager_id)\">{{ props.row.duty_manager.name_duty_manager }}</a>\n               \n                </template>\n              </b-table-column>\n\n              <b-table-column\n                field=\"building.name_building\"\n                label=\"Edificio\"\n                sortable\n                searchable\n              >\n                <template slot=\"searchable\" slot-scope=\"props\">\n                  <b-input\n                    v-model=\"props.filters[props.column.field]\"\n                    placeholder=\" Buscar\"\n                    size=\"is-small\"\n                  />\n                </template>\n                <template v-slot=\"props\">\n                   <a href=\"#\" @click=\"Clickshowbuilding(props.row.building_id)\">{{ props.row.building.name_building }}</a>\n            \n                </template>\n              </b-table-column>\n\n              <b-table-column\n                field=\"location\"\n                label=\"Ubicación\"\n                sortable\n                searchable\n              >\n                <template slot=\"searchable\" slot-scope=\"props\">\n                  <b-input\n                    v-model=\"props.filters[props.column.field]\"\n                    placeholder=\" Buscar\"\n                    size=\"is-small\"\n                  />\n                </template>\n                <template v-slot=\"props\">\n                  {{ props.row.location }}\n                </template>\n              </b-table-column>\n\n              <b-table-column field=\"id\" width=\"10\" v-slot=\"props\">\n               <b-tooltip label=\"Ver detalle\" type=\"is-info\">\n               <b-icon\n              pack=\"fas\"\n              icon=\"eye\"\n              size=\"is-medium\"\n              @click.native=\"Clickshowoffice(props.row.id)\"/>\n              </b-tooltip>\n              </b-table-column>\n            </b-table>\n          </div>\n\n        </b-tab-item>\n      </b-tabs>\n    </div> \n  \n<a href=\"/buildings\"   style= \"font-weight: normal;\n  font-size: 20px;\n  font-family: Arial;\n  margin: 10px;\n  margin-left: 30px;\">Volver</a>\n  </section>\n</template>\n\n \n<script>\nimport axios from \"axios\";\nexport default {\n  name:\"show_building\",\n  props: [\"id\",'queryType', 'modalHeader','buildingId'],\n  data() {\n    return {\n      offices: [],\n      building: null,\n      props: [\"id\"],\n    };\n  },\n  methods: {\n    async getoffices() {\n      const response = await axios.get(\n        \"/offices/showofficebuilding/\" + this.buildingId + \".json\"\n      );\n      this.offices = response.data;\n    },\n    async Clickshowoffice(item) {\n      const response = (window.location.href = \"/offices/\" + item);\n    },\n     async Clickshowbuilding(item) {\n      const response = (window.location.href = \"/buildings/\" + item );\n    },\n     async Clickshowdutymanager(item) {\n      const response = (window.location.href = \"/duty_managers/\" + item );\n    },\n       async Clickshowunit(item) {\n      const response = (window.location.href = \"/units/\" + item);\n    },\n\n    async getbuildings() {\n      const response = await axios.get(\n        \"/buildings/\" + this.buildingId + \".json\"\n      );\n      this.building = response.data;\n    },\n\n  },\n  created() {\n    this.getbuildings();\n    this.getoffices();\n  },\n};\n</script>\n\n\n\n\n"],"sourceRoot":"app/javascript/components/building"},"metadata":{},"sourceType":"module"}