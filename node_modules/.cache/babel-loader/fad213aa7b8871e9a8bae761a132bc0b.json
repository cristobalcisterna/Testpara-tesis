{"ast":null,"code":"import { _ as __vue_normalize__, r as registerComponent, u as use } from './chunk-cca88db8.js';\nvar script = {\n  name: 'BCollapse',\n  // deprecated, to replace with default 'value' in the next breaking change\n  model: {\n    prop: 'open',\n    event: 'update:open'\n  },\n  props: {\n    open: {\n      type: Boolean,\n      \"default\": true\n    },\n    animation: {\n      type: String,\n      \"default\": 'fade'\n    },\n    ariaId: {\n      type: String,\n      \"default\": ''\n    },\n    position: {\n      type: String,\n      \"default\": 'is-top',\n      validator: function validator(value) {\n        return ['is-top', 'is-bottom'].indexOf(value) > -1;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      isOpen: this.open\n    };\n  },\n  watch: {\n    open: function open(value) {\n      this.isOpen = value;\n    }\n  },\n  methods: {\n    /**\r\n    * Toggle and emit events\r\n    */\n    toggle: function toggle() {\n      this.isOpen = !this.isOpen;\n      this.$emit('update:open', this.isOpen);\n      this.$emit(this.isOpen ? 'open' : 'close');\n    }\n  },\n  render: function render(createElement) {\n    var trigger = createElement('div', {\n      staticClass: 'collapse-trigger',\n      on: {\n        click: this.toggle\n      }\n    }, this.$scopedSlots.trigger ? [this.$scopedSlots.trigger({\n      open: this.isOpen\n    })] : [this.$slots.trigger]);\n    var content = createElement('transition', {\n      props: {\n        name: this.animation\n      }\n    }, [createElement('div', {\n      staticClass: 'collapse-content',\n      attrs: {\n        'id': this.ariaId\n      },\n      directives: [{\n        name: 'show',\n        value: this.isOpen\n      }]\n    }, this.$slots[\"default\"])]);\n    return createElement('div', {\n      staticClass: 'collapse'\n    }, this.position === 'is-top' ? [trigger, content] : [content, trigger]);\n  }\n};\n/* script */\n\nvar __vue_script__ = script;\n/* template */\n\n/* style */\n\nvar __vue_inject_styles__ = undefined;\n/* scoped */\n\nvar __vue_scope_id__ = undefined;\n/* module identifier */\n\nvar __vue_module_identifier__ = undefined;\n/* functional template */\n\nvar __vue_is_functional_template__ = undefined;\n/* style inject */\n\n/* style inject SSR */\n\nvar Collapse = __vue_normalize__({}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, undefined, undefined);\n\nvar Plugin = {\n  install: function install(Vue) {\n    registerComponent(Vue, Collapse);\n  }\n};\nuse(Plugin);\nexport default Plugin;\nexport { Collapse as BCollapse };","map":null,"metadata":{},"sourceType":"module"}