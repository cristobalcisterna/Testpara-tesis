{"ast":null,"code":"import './chunk-1fafdf15.js';\nimport { merge } from './helpers.js';\nimport { c as config, V as VueInstance } from './chunk-652f2dad.js';\nimport { _ as __vue_normalize__, a as registerComponentProgrammatic, u as use } from './chunk-cca88db8.js';\nimport { N as NoticeMixin } from './chunk-4e380ee2.js'; //\n\nvar script = {\n  name: 'BToast',\n  mixins: [NoticeMixin],\n  data: function data() {\n    return {\n      newDuration: this.duration || config.defaultToastDuration\n    };\n  }\n};\n/* script */\n\nvar __vue_script__ = script;\n/* template */\n\nvar __vue_render__ = function __vue_render__() {\n  var _vm = this;\n\n  var _h = _vm.$createElement;\n\n  var _c = _vm._self._c || _h;\n\n  return _c('transition', {\n    attrs: {\n      \"enter-active-class\": _vm.transition.enter,\n      \"leave-active-class\": _vm.transition.leave\n    }\n  }, [_c('div', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.isActive,\n      expression: \"isActive\"\n    }],\n    staticClass: \"toast\",\n    \"class\": [_vm.type, _vm.position],\n    attrs: {\n      \"aria-hidden\": !_vm.isActive,\n      \"role\": \"alert\"\n    },\n    on: {\n      \"mouseover\": _vm.pause,\n      \"mouseleave\": _vm.removePause\n    }\n  }, [_vm.$slots[\"default\"] ? [_vm._t(\"default\")] : [_c('div', {\n    domProps: {\n      \"innerHTML\": _vm._s(_vm.message)\n    }\n  })]], 2)]);\n};\n\nvar __vue_staticRenderFns__ = [];\n/* style */\n\nvar __vue_inject_styles__ = undefined;\n/* scoped */\n\nvar __vue_scope_id__ = undefined;\n/* module identifier */\n\nvar __vue_module_identifier__ = undefined;\n/* functional template */\n\nvar __vue_is_functional_template__ = false;\n/* style inject */\n\n/* style inject SSR */\n\nvar Toast = __vue_normalize__({\n  render: __vue_render__,\n  staticRenderFns: __vue_staticRenderFns__\n}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, undefined, undefined);\n\nvar localVueInstance;\nvar ToastProgrammatic = {\n  open: function open(params) {\n    var parent;\n\n    if (typeof params === 'string') {\n      params = {\n        message: params\n      };\n    }\n\n    var defaultParam = {\n      position: config.defaultToastPosition || 'is-top'\n    };\n\n    if (params.parent) {\n      parent = params.parent;\n      delete params.parent;\n    }\n\n    var slot;\n\n    if (Array.isArray(params.message)) {\n      slot = params.message;\n      delete params.message;\n    }\n\n    var propsData = merge(defaultParam, params);\n    var vm = typeof window !== 'undefined' && window.Vue ? window.Vue : localVueInstance || VueInstance;\n    var ToastComponent = vm.extend(Toast);\n    var component = new ToastComponent({\n      parent: parent,\n      el: document.createElement('div'),\n      propsData: propsData\n    });\n\n    if (slot) {\n      component.$slots[\"default\"] = slot;\n      component.$forceUpdate();\n    }\n\n    return component;\n  }\n};\nvar Plugin = {\n  install: function install(Vue) {\n    localVueInstance = Vue;\n    registerComponentProgrammatic(Vue, 'toast', ToastProgrammatic);\n  }\n};\nuse(Plugin);\nexport default Plugin;\nexport { Toast as BToast, ToastProgrammatic };","map":null,"metadata":{},"sourceType":"module"}