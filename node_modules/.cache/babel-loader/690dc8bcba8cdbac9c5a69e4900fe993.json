{"ast":null,"code":"import './chunk-455cdeae.js';\nimport { removeElement, merge } from './helpers.js';\nimport { c as config, V as VueInstance } from './chunk-e92e3389.js';\nimport './chunk-7e17a637.js';\nimport { _ as __vue_normalize__, r as registerComponent, a as registerComponentProgrammatic, u as use } from './chunk-cca88db8.js';\nimport { M as MessageMixin } from './chunk-7bb9107f.js';\nimport { N as NoticeMixin } from './chunk-a32d1427.js'; //\n\nvar script = {\n  name: 'BNotification',\n  mixins: [MessageMixin],\n  props: {\n    position: String,\n    ariaCloseLabel: String,\n    animation: {\n      type: String,\n      \"default\": 'fade'\n    }\n  }\n};\n/* script */\n\nvar __vue_script__ = script;\n/* template */\n\nvar __vue_render__ = function __vue_render__() {\n  var _vm = this;\n\n  var _h = _vm.$createElement;\n\n  var _c = _vm._self._c || _h;\n\n  return _c('transition', {\n    attrs: {\n      \"name\": _vm.animation\n    }\n  }, [_c('article', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.isActive,\n      expression: \"isActive\"\n    }],\n    staticClass: \"notification\",\n    \"class\": [_vm.type, _vm.position],\n    on: {\n      \"click\": _vm.click\n    }\n  }, [_vm.closable ? _c('button', {\n    staticClass: \"delete\",\n    attrs: {\n      \"type\": \"button\",\n      \"aria-label\": _vm.ariaCloseLabel\n    },\n    on: {\n      \"click\": _vm.close\n    }\n  }) : _vm._e(), _vm.$slots[\"default\"] || _vm.message ? _c('div', {\n    staticClass: \"media\"\n  }, [_vm.computedIcon && _vm.hasIcon ? _c('div', {\n    staticClass: \"media-left\"\n  }, [_c('b-icon', {\n    attrs: {\n      \"icon\": _vm.computedIcon,\n      \"pack\": _vm.iconPack,\n      \"size\": _vm.newIconSize,\n      \"both\": \"\",\n      \"aria-hidden\": \"\"\n    }\n  })], 1) : _vm._e(), _c('div', {\n    staticClass: \"media-content\"\n  }, [_vm.$slots[\"default\"] ? [_vm._t(\"default\")] : [_c('p', {\n    staticClass: \"text\",\n    domProps: {\n      \"innerHTML\": _vm._s(_vm.message)\n    }\n  })]], 2)]) : _vm._e(), _vm.progressBar ? _c('b-progress', {\n    attrs: {\n      \"value\": _vm.remainingTime - 1,\n      \"max\": _vm.duration / 1000 - 1,\n      \"type\": _vm.type,\n      \"rounded\": false\n    }\n  }) : _vm._e()], 1)]);\n};\n\nvar __vue_staticRenderFns__ = [];\n/* style */\n\nvar __vue_inject_styles__ = undefined;\n/* scoped */\n\nvar __vue_scope_id__ = undefined;\n/* module identifier */\n\nvar __vue_module_identifier__ = undefined;\n/* functional template */\n\nvar __vue_is_functional_template__ = false;\n/* style inject */\n\n/* style inject SSR */\n\nvar Notification = __vue_normalize__({\n  render: __vue_render__,\n  staticRenderFns: __vue_staticRenderFns__\n}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, undefined, undefined); //\n\n\nvar script$1 = {\n  name: 'BNotificationNotice',\n  mixins: [NoticeMixin],\n  data: function data() {\n    return {\n      newDuration: this.duration || config.defaultNotificationDuration\n    };\n  },\n  methods: {\n    close: function close() {\n      var _this = this;\n\n      if (!this.isPaused) {\n        clearTimeout(this.timer);\n        this.$refs.notification.isActive = false;\n        this.$emit('close'); // Timeout for the animation complete before destroying\n\n        setTimeout(function () {\n          _this.$destroy();\n\n          removeElement(_this.$el);\n        }, 150);\n      }\n    }\n  }\n};\n/* script */\n\nvar __vue_script__$1 = script$1;\n/* template */\n\nvar __vue_render__$1 = function __vue_render__$1() {\n  var _vm = this;\n\n  var _h = _vm.$createElement;\n\n  var _c = _vm._self._c || _h;\n\n  return _c('b-notification', _vm._b({\n    ref: \"notification\",\n    on: {\n      \"click\": _vm.click,\n      \"close\": _vm.close\n    },\n    nativeOn: {\n      \"mouseenter\": function mouseenter($event) {\n        return _vm.pause($event);\n      },\n      \"mouseleave\": function mouseleave($event) {\n        return _vm.removePause($event);\n      }\n    }\n  }, 'b-notification', _vm.$options.propsData, false), [_vm._t(\"default\")], 2);\n};\n\nvar __vue_staticRenderFns__$1 = [];\n/* style */\n\nvar __vue_inject_styles__$1 = undefined;\n/* scoped */\n\nvar __vue_scope_id__$1 = undefined;\n/* module identifier */\n\nvar __vue_module_identifier__$1 = undefined;\n/* functional template */\n\nvar __vue_is_functional_template__$1 = false;\n/* style inject */\n\n/* style inject SSR */\n\nvar NotificationNotice = __vue_normalize__({\n  render: __vue_render__$1,\n  staticRenderFns: __vue_staticRenderFns__$1\n}, __vue_inject_styles__$1, __vue_script__$1, __vue_scope_id__$1, __vue_is_functional_template__$1, __vue_module_identifier__$1, undefined, undefined);\n\nvar localVueInstance;\nvar NotificationProgrammatic = {\n  open: function open(params) {\n    var parent;\n\n    if (typeof params === 'string') {\n      params = {\n        message: params\n      };\n    }\n\n    var defaultParam = {\n      position: config.defaultNotificationPosition || 'is-top-right'\n    };\n\n    if (params.parent) {\n      parent = params.parent;\n      delete params.parent;\n    }\n\n    var slot;\n\n    if (Array.isArray(params.message)) {\n      slot = params.message;\n      delete params.message;\n    } // fix animation\n\n\n    params.active = false;\n    var propsData = merge(defaultParam, params);\n    var vm = typeof window !== 'undefined' && window.Vue ? window.Vue : localVueInstance || VueInstance;\n    var NotificationNoticeComponent = vm.extend(NotificationNotice);\n    var component = new NotificationNoticeComponent({\n      parent: parent,\n      el: document.createElement('div'),\n      propsData: propsData\n    });\n\n    if (slot) {\n      component.$slots[\"default\"] = slot;\n      component.$forceUpdate();\n    } // fix animation\n\n\n    component.$children[0].isActive = true;\n    return component;\n  }\n};\nvar Plugin = {\n  install: function install(Vue) {\n    localVueInstance = Vue;\n    registerComponent(Vue, Notification);\n    registerComponentProgrammatic(Vue, 'notification', NotificationProgrammatic);\n  }\n};\nuse(Plugin);\nexport default Plugin;\nexport { Notification as BNotification, NotificationProgrammatic };","map":null,"metadata":{},"sourceType":"module"}