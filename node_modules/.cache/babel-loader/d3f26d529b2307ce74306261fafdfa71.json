{"ast":null,"code":"function _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport axios from \"axios\";\nexport default {\n  name: \"show_unit\",\n  props: [\"id\", 'queryType', 'modalHeader', 'unitId'],\n  data: function data() {\n    return {\n      total: null,\n      unit: null,\n      managers: [],\n      buildings_unit: [],\n      id_buildings_list: [],\n      offices_unit: [],\n      id_managers_list: [],\n      id_offices_list: [],\n      id_goods_list: [],\n      goods: [],\n      goodamounts: [],\n      props: [\"id\"]\n    };\n  },\n  methods: {\n    getunits: function getunits() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"/units/\" + _this.unitId + \".json\");\n\n              case 2:\n                response = _context.sent;\n                _this.unit = response.data;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    getdutymanagerbyunit: function getdutymanagerbyunit() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get(\"/duty_managers/showdutymanagerunit/\" + _this2.unitId + \".json\");\n\n              case 2:\n                response = _context2.sent;\n                _this2.managers = response.data;\n                _this2.id_managers_list = _this2.managers.map(function (o) {\n                  return o['id'];\n                });\n                console.log(_this2.id_managers_list);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    Clickshowdutymanager: function Clickshowdutymanager(item) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                response = window.location.href = \"/duty_managers/\" + item;\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    Clickshowunit: function Clickshowunit(item) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                response = window.location.href = \"/units/\" + item;\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    getgoodbyunit: function getgoodbyunit() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var response, c;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return axios.get(\"/goods/showgoodunit/\" + _this3.unitId + \".json\");\n\n              case 2:\n                response = _context5.sent;\n                _this3.goods = response.data;\n                _this3.goodamounts = _this3.goods.map(function (o) {\n                  return o['amount'];\n                });\n                _this3.id_goods_list = _this3.goods.map(function (o) {\n                  return o['id'];\n                });\n                c = 0;\n                _this3.total = _this3.goodamounts.reduce(function (a, b) {\n                  return a + b;\n                }, c);\n                console.log(_this3.id_goods_list);\n\n              case 9:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    },\n    getofficebyunit: function getofficebyunit() {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return axios.get(\"/offices/showofficeunit/\" + _this4.unitId + \".json\");\n\n              case 2:\n                response = _context6.sent;\n                _this4.offices_unit = response.data;\n                _this4.id_offices_list = _this4.offices_unit.map(function (o) {\n                  return o['id'];\n                });\n                console.log(_this4.id_offices_list);\n\n              case 6:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    },\n    getbuildingbyunit: function getbuildingbyunit() {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return axios.get(\"/buildings/showbuildingunit/\" + _this5.unitId + \".json\");\n\n              case 2:\n                response = _context7.sent;\n                _this5.buildings_unit = response.data;\n                _this5.id_buildings_list = _this5.buildings_unit.map(function (o) {\n                  return o['id'];\n                });\n                console.log(_this5.id_buildings_list);\n\n              case 6:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    }\n  },\n  created: function created() {\n    this.getunits();\n    this.getdutymanagerbyunit();\n    this.getofficebyunit();\n    this.getgoodbyunit();\n    this.getbuildingbyunit();\n  }\n};","map":{"version":3,"mappings":"+CAuJA,oJ;;;;;;AAAA;AACA;EACAA,iBADA;EAEAC,mDAFA;EAGAC,IAHA,kBAGA;IACA;MACAC,WADA;MAEAC,UAFA;MAGAC,YAHA;MAIAC,kBAJA;MAKAC,qBALA;MAMAC,gBANA;MAOAC,oBAPA;MAQAC,mBARA;MASAC,iBATA;MAUAC,SAVA;MAWAC,eAXA;MAYAZ;IAZA;EAcA,CAlBA;EAmBAa;IACAC,QADA,sBACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC,6CADA;;cAAA;gBACAC,QADA;gBAEA;;cAFA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAGA,CAJA;IAMAC,oBANA,kCAMA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAF,UACA,+DADA,CADA;;cAAA;gBACAC,QADA;gBAIA;gBACA;kBAAA;gBAAA;gBACAE;;cANA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAOA,CAbA;IAkBAC,oBAlBA,gCAkBAC,IAlBA,EAkBA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAJ,QADA,GACAK,+CADA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA,CApBA;IAqBAC,aArBA,yBAqBAF,IArBA,EAqBA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAJ,QADA,GACAK,uCADA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA,CAvBA;IAyBAE,aAzBA,2BAyBA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAR,2DADA;;cAAA;gBACAC,QADA;gBAEA;gBACA;kBAAA;gBAAA;gBACA;kBAAA;gBAAA;gBAEAQ,CANA,GAMA,CANA;gBAOA;kBAAA;gBAAA;gBACAN;;cARA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAUA,CAnCA;IAqCAO,eArCA,6BAqCA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAV,UACA,oDADA,CADA;;cAAA;gBACAC,QADA;gBAIA;gBACA;kBAAA;gBAAA;gBACAE;;cANA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAOA,CA5CA;IA8CAQ,iBA9CA,+BA8CA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAX,UACA,wDADA,CADA;;cAAA;gBACAC,QADA;gBAIA;gBACA;kBAAA;gBAAA;gBACAE;;cANA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAOA;EArDA,CAnBA;EA8EAS,OA9EA,qBA8EA;IACA;IACA;IACA;IACA;IACA;EAEA;AArFA","names":["name","props","data","total","unit","managers","buildings_unit","id_buildings_list","offices_unit","id_managers_list","id_offices_list","id_goods_list","goods","goodamounts","methods","getunits","axios","response","getdutymanagerbyunit","console","Clickshowdutymanager","item","window","Clickshowunit","getgoodbyunit","c","getofficebyunit","getbuildingbyunit","created"],"sourceRoot":"app/javascript/components/unit","sources":["show_unit.vue"],"sourcesContent":["<template>\n  <section class=\"b-tooltips\">\n    <div \n      class=\"box\" style=\"margin-top: 60px; margin-left: 300px; margin-right: 300px\"\n    >\n     <h1>Detalle de la Unidad</h1>\n      <b-tabs type=\"is-boxed\" position=\"is-centered\">\n        <b-tab-item label=\"Detalle de la Unidad\">\n           <div class=\"center\"> <h1>Información de la Unidad</h1></div>\n          <div class=\"box\" >\n \n          <div v-if=\"unit\" class=\"columns is-centered\">\n            <div class=\"column is-centered\">\n\n              <div class=\"columns\"> \n                <div class=\"column\">\n                  <b-field label=\"Nombre la unidad:\">\n                       <b-input\n                    v-model=\" unit.name_unit \" type=\"text\" readonly></b-input>\n                  </b-field>\n                </div>\n              </div>\n\n              <div class=\"columns\">\n                <div class=\"column\">\n                  <b-field label=\"Numero identificación de la unidad:\">\n                   <b-input\n                    v-model=\"unit.identification_number_unit\" type=\"text\" readonly></b-input>\n                  </b-field>\n                </div>\n              </div>\n\n              <div class=\"columns\"> \n              <div class=\"column\">\n                <b-field label=\"Monto bruto total invertido en bienes: \">\n                  <b-input\n                    v-model=\"total\" type=\"text\" readonly\n                  ></b-input>\n                </b-field>\n              </div>\n            </div>\n\n              <div class=\"columns\">\n                <div class=\"column\">\n                  <b-field label=\"Descripción:\">\n                       <b-input\n                    v-model=\"unit.description_unit\" type=\"text\" readonly></b-input>\n                  </b-field>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n          <div v-else>\n            <p>Loading</p>\n          </div>\n          </div>\n        </b-tab-item>\n\n        <b-tab-item label=\"Personas asociadas a la unidad\">\n           <div class=\"center\"> <h1>Personas asociadas a la facultad</h1></div>\n          <div class=\"box\">\n            <div class=\"column\">\n              <b-table\n                :data=\"managers\"\n                :paginated=\"true\"\n                per-page=\"8\"\n                striped\n                hoverable\n                :pagination-simple=\"false\"\n                pagination-position=\"bottom\"\n                default-sort-direction=\"asc\"\n                sort-icon=\"arrow-up\"\n                sort-icon-size=\"is-small\"\n                default-sort=\"inventores.name\"\n                aria-next-label=\"Siguiente\"\n                aria-previous-label=\"Anterior\"\n                aria-page-label=\"Página\"\n                aria-current-label=\"Página actual\"\n              >\n                <b-table-column\n                  :visible=\"false\"\n                  field=\"id\"\n                  label=\"ID\"\n                  sortable\n                  searchable\n                >\n\n                  <template v-slot=\"props\">\n                    {{ props.row.id }}\n                  </template>\n                </b-table-column>\n\n                <b-table-column\n                  field=\"name_duty_manager\"\n                  label=\"Nombre de la persona asociada\"\n                  sortable\n                  searchable\n                >\n\n                  <template v-slot=\"props\">\n                  <a href=\"#\" @click=\"Clickshowdutymanager(props.row.id)\">{{ props.row.name_duty_manager }}</a>\n                  </template>\n                </b-table-column>\n\n                <b-table-column field=\"rut\" label=\"Rut\" sortable searchable>\n\n                  <template v-slot=\"props\">\n                    {{ props.row.rut }}\n                  </template>\n                </b-table-column>\n\n                <b-table-column\n                  field=\"unit.name_unit\"\n                  label=\"Nombre Unidad\"\n                  sortable\n                  searchable\n                >\n\n                  <template v-slot=\"props\">\n                    <a href=\"#\" @click=\"Clickshowunit(props.row.unit_id)\">{{ props.row.unit.name_unit }}</a>\n            \n                  </template>\n                </b-table-column>\n\n                <b-table-column field=\"id\" width=\"10\" v-slot=\"props\">\n                 <b-tooltip label=\"Ver detalle\" type=\"is-info\">\n                <b-icon\n              pack=\"fas\"\n              icon=\"eye\"\n              size=\"is-medium\"\n              @click.native=\"Clickshowdutymanager(props.row.id)\"/>\n              </b-tooltip>\n                </b-table-column>\n              </b-table>\n            </div>\n          </div>\n        </b-tab-item>\n      </b-tabs>\n    </div>\n    <a href=\"/units\"   style= \"font-weight: normal;\n  font-size: 20px;\n  font-family: Arial;\n  margin: 10px;\n  margin-left: 30px;\">Volver</a>\n  </section>\n</template>\n\n\n<script>\nimport axios from \"axios\";\nexport default {\n  name:\"show_unit\",\n  props: [\"id\",'queryType', 'modalHeader','unitId'],\n  data() {\n    return {\n      total: null,\n      unit: null,\n      managers: [],\n      buildings_unit: [],\n      id_buildings_list: [],\n      offices_unit: [],\n      id_managers_list: [],\n      id_offices_list: [],\n      id_goods_list: [],\n      goods: [],\n      goodamounts: [],\n      props: [\"id\"],\n    };\n  },\n  methods: {\n    async getunits() {\n      const response = await axios.get(\"/units/\" + this.unitId + \".json\");\n      this.unit = response.data;\n    },\n\n    async getdutymanagerbyunit() {\n      const response = await axios.get(\n        \"/duty_managers/showdutymanagerunit/\" + this.unitId + \".json\"\n      );\n      this.managers = response.data;\n      this.id_managers_list = this.managers.map(o => o['id']);\n      console.log(this.id_managers_list);\n    },\n\n\n\n\n    async Clickshowdutymanager(item) {\n      const response = (window.location.href = \"/duty_managers/\" + item);\n    },\n    async Clickshowunit(item) {\n      const response = (window.location.href = \"/units/\" + item);\n    },\n\n            async getgoodbyunit() {\n      const response = await axios.get(\"/goods/showgoodunit/\" + this.unitId + \".json\");\n      this.goods = response.data;\n      this.goodamounts = this.goods.map(o => o['amount']);\n      this.id_goods_list = this.goods.map(o => o['id']);\n\n      const c = 0;\n      this.total = this.goodamounts.reduce((a, b) => a + b,c);\n      console.log(this.id_goods_list);\n   \n    },\n\n    async getofficebyunit() {\n      const response = await axios.get(\n        \"/offices/showofficeunit/\" + this.unitId + \".json\"\n      );\n      this.offices_unit = response.data;\n      this.id_offices_list = this.offices_unit.map(o => o['id']);\n      console.log(this.id_offices_list);\n    },\n\n    async getbuildingbyunit() {\n      const response = await axios.get(\n        \"/buildings/showbuildingunit/\" + this.unitId + \".json\"\n      );\n      this.buildings_unit = response.data;\n      this.id_buildings_list = this.buildings_unit.map(o => o['id']);\n      console.log(this.id_buildings_list);\n    },\n\n\n\n\n  },\n  created() {\n    this.getunits();\n    this.getdutymanagerbyunit();\n    this.getofficebyunit();\n    this.getgoodbyunit();\n    this.getbuildingbyunit();\n    \n  },\n};\n</script>\n\n"]},"metadata":{},"sourceType":"module"}