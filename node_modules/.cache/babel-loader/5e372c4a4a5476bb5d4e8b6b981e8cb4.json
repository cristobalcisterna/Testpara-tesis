{"ast":null,"code":"function _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport axios from \"axios\";\nimport IndexGoods from \"./index_good.vue\";\nimport moment from \"moment\";\nexport default {\n  name: \"edit_good\",\n  props: [\"queryType\", \"modalHeader\", \"goodId\", \"id\"],\n  components: {\n    \"index-good\": IndexGoods\n  },\n  data: function data() {\n    return {\n      good: null,\n      goods: [],\n      props: [\"id\"],\n      offices: [],\n      units: [],\n      managers: [],\n      buildings: [],\n      financial_sources: [],\n      investment_types: [],\n      aux_good_description: null,\n      aux_identification_number_usach: null,\n      aux_identification_number_good: null,\n      aux_serie_number: null,\n      aux_internal_number: null,\n      aux_trademark: null,\n      aux_location_good: null,\n      aux_unit_id: null,\n      aux_date_release: new Date(),\n      aux_amount: null,\n      aux_date_purchase: new Date(),\n      aux_duty_manager_id: null,\n      aux_building_id: null,\n      aux_investment_type_id: null,\n      aux_financial_source_id: null,\n      aux_office_id: null\n    };\n  },\n  methods: {\n    getgoods: function getgoods() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"/goods/\" + _this.id + \".json\");\n\n              case 2:\n                response = _context.sent;\n                _this.loading = true;\n                _this.good = response.data;\n                _this.aux_date_release = new Date(_this.good.date_release);\n                _this.aux_financial_source_id = _this.good.financial_source_id;\n                _this.aux_investment_type_id = _this.good.financial_source_id;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    getunitactive: function getunitactive() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get(\"/units/showactiveunit.json\");\n\n              case 2:\n                response = _context2.sent;\n                _this2.units = response.data;\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    getfinancialsource: function getfinancialsource() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios.get(\"http://localhost:3000/financial_sources.json\");\n\n              case 2:\n                response = _context3.sent;\n                _this3.financial_sources = response.data;\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    getinvestmenttype: function getinvestmenttype() {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return axios.get(\"http://localhost:3000/investment_types.json\");\n\n              case 2:\n                response = _context4.sent;\n                _this4.investment_types = response.data;\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    getdutymanagerbyunit: function getdutymanagerbyunit(item) {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return axios.get(\"http://localhost:3000/duty_managers/showdutymanagerunit/\" + item + \".json\");\n\n              case 2:\n                response = _context5.sent;\n                _this5.managers = response.data;\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    },\n    getbuildingbyunit: function getbuildingbyunit(item) {\n      var _this6 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return axios.get(\"http://localhost:3000/buildings/showbuildingunit/\" + item + \".json\");\n\n              case 2:\n                response = _context6.sent;\n                _this6.buildings = response.data;\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    },\n    getofficebybuilding: function getofficebybuilding(item) {\n      var _this7 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return axios.get(\"http://localhost:3000/offices/showofficebuilding/\" + item + \".json\");\n\n              case 2:\n                response = _context7.sent;\n                _this7.offices = response.data;\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    },\n    EditClick: function EditClick() {\n      var _this8 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return axios.put(\"/goods/\" + _this8.id + \".json\", {\n                  namegood: _this8.good.namegood,\n                  good_description: _this8.good.good_description,\n                  identification_number_usach: _this8.good.identification_number_usach,\n                  identification_number_good: _this8.good.identification_number_good,\n                  serie_number: _this8.good.serie_number,\n                  internal_number: _this8.good.internal_number,\n                  trademark: _this8.good.trademark,\n                  location_good: _this8.good.location_good,\n                  date_release: _this8.aux_date_release,\n                  amount: _this8.good.amount,\n                  date_purchase: _this8.good.aux_date_purchase,\n                  financial_source_id: _this8.aux_financial_source_id,\n                  investment_type_id: _this8.aux_investment_type_id\n                });\n\n              case 2:\n                response = _context8.sent;\n                window.location.href = \"/goods/\" + _this8.id;\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    },\n    confirmedit: function confirmedit() {\n      var _this9 = this;\n\n      this.$buefy.dialog.confirm({\n        title: \"Editar el Bien\",\n        message: \"\\xBFEsta seguro de editar est\\xE9 bien?\",\n        cancelText: \"Cancelar\",\n        confirmText: \"Guardar\",\n        type: \"is-info\",\n        onConfirm: function onConfirm() {\n          return _this9.EditClick();\n        }\n      });\n    },\n    EditClickDes: function EditClickDes() {\n      var _this10 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return axios.put(\"/goods/\" + _this10.id + \".json\", {\n                  duty_manager_id: _this10.aux_duty_manager_id,\n                  office_id: _this10.aux_office_id,\n                  activegood: 1\n                });\n\n              case 2:\n                response = _context9.sent;\n                window.location.href = \"/goods\";\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }))();\n    },\n    confirmeditDes: function confirmeditDes() {\n      var _this11 = this;\n\n      this.$buefy.dialog.confirm({\n        title: \"Editar el Bien\",\n        message: \"\\xBFEsta seguro de editar est\\xE9 bien?\",\n        cancelText: \"Cancelar\",\n        confirmText: \"Guardar\",\n        type: \"is-info\",\n        onConfirm: function onConfirm() {\n          return _this11.EditClickDes();\n        }\n      });\n    }\n  },\n  created: function created() {\n    this.getgoods();\n    this.getunitactive();\n    this.getfinancialsource();\n    this.getinvestmenttype();\n  }\n};","map":{"version":3,"mappings":"+CAigBA,oJ;;;;;;AAAA;AACA;AACA;AACA;EACAA,iBADA;EAEAC,mDAFA;EAGAC;IACA;EADA,CAHA;EAOAC,IAPA,kBAOA;IACA;MACAC,UADA;MAEAC,SAFA;MAGAJ,aAHA;MAIAK,WAJA;MAKAC,SALA;MAMAC,YANA;MAOAC,aAPA;MAQAC,qBARA;MASAC,oBATA;MAUAC,0BAVA;MAWAC,qCAXA;MAYAC,oCAZA;MAaAC,sBAbA;MAcAC,yBAdA;MAeAC,mBAfA;MAgBAC,uBAhBA;MAiBAC,iBAjBA;MAkBAC,4BAlBA;MAmBAC,gBAnBA;MAoBAC,6BApBA;MAqBAC,yBArBA;MAsBAC,qBAtBA;MAuBAC,4BAvBA;MAwBAC,6BAxBA;MAyBAC;IAzBA;EA2BA,CAnCA;EAoCAC;IACAC,QADA,sBACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC,yCADA;;cAAA;gBACAC,QADA;gBAEA;gBACA;gBACA;gBACA;gBACA;;cANA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAQA,CATA;IAWAC,aAXA,2BAWA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAF,uCADA;;cAAA;gBACAC,QADA;gBAEA;;cAFA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAGA,CAdA;IAgBAE,kBAhBA,gCAgBA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAH,yDADA;;cAAA;gBACAC,QADA;gBAEA;;cAFA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAGA,CAnBA;IAqBAG,iBArBA,+BAqBA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAJ,wDADA;;cAAA;gBACAC,QADA;gBAEA;;cAFA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAGA,CAxBA;IA2BAI,oBA3BA,gCA2BAC,IA3BA,EA2BA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAN,UACA,6DACAM,IADA,GAEA,OAHA,CADA;;cAAA;gBACAL,QADA;gBAMA;;cANA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAOA,CAlCA;IAoCAM,iBApCA,6BAoCAD,IApCA,EAoCA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAN,UACA,oEADA,CADA;;cAAA;gBACAC,QADA;gBAIA;;cAJA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAKA,CAzCA;IA2CAO,mBA3CA,+BA2CAF,IA3CA,EA2CA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAN,UACA,oEADA,CADA;;cAAA;gBACAC,QADA;gBAIA;;cAJA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAKA,CAhDA;IAkDAQ,SAlDA,uBAkDA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAT;kBACAU,8BADA;kBAEAC,8CAFA;kBAGAC,oEAHA;kBAIAC,kEAJA;kBAKAC,sCALA;kBAMAC,4CANA;kBAOAC,gCAPA;kBAQAC,wCARA;kBASAC,qCATA;kBAUAC,0BAVA;kBAWAC,4CAXA;kBAYAC,mDAZA;kBAaAC;gBAbA,EADA;;cAAA;gBACArB,QADA;gBAgBAsB;;cAhBA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAiBA,CAnEA;IAqEAC,WArEA,yBAqEA;MAAA;;MACA;QACAC,uBADA;QAEAC,kDAFA;QAGAC,sBAHA;QAIAC,sBAJA;QAKAC,eALA;QAMAC;UAAA;QAAA;MANA;IAQA,CA9EA;IA+EAC,YA/EA,0BA+EA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA/B;kBACAgC,4CADA;kBAEAC,gCAFA;kBAGAC;gBAHA,EADA;;cAAA;gBACAjC,QADA;gBAMAsB;;cANA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAOA,CAtFA;IAwFAY,cAxFA,4BAwFA;MAAA;;MACA;QACAV,uBADA;QAEAC,kDAFA;QAGAC,sBAHA;QAIAC,sBAJA;QAKAC,eALA;QAMAC;UAAA;QAAA;MANA;IAQA;EAjGA,CApCA;EAyIAM,OAzIA,qBAyIA;IACA;IACA;IACA;IACA;EACA;AA9IA","names":["name","props","components","data","good","goods","offices","units","managers","buildings","financial_sources","investment_types","aux_good_description","aux_identification_number_usach","aux_identification_number_good","aux_serie_number","aux_internal_number","aux_trademark","aux_location_good","aux_unit_id","aux_date_release","aux_amount","aux_date_purchase","aux_duty_manager_id","aux_building_id","aux_investment_type_id","aux_financial_source_id","aux_office_id","methods","getgoods","axios","response","getunitactive","getfinancialsource","getinvestmenttype","getdutymanagerbyunit","item","getbuildingbyunit","getofficebybuilding","EditClick","namegood","good_description","identification_number_usach","identification_number_good","serie_number","internal_number","trademark","location_good","date_release","amount","date_purchase","financial_source_id","investment_type_id","window","confirmedit","title","message","cancelText","confirmText","type","onConfirm","EditClickDes","duty_manager_id","office_id","activegood","confirmeditDes","created"],"sourceRoot":"app/javascript/components/good","sources":["edit_good.vue"],"sourcesContent":["<template>\n  <section>\n    <div class=\"modal-card\" style=\"width: 62em; height: auto\">\n      <header class=\"modal-card-head\">\n        <p class=\"modal-card-title\">{{ modalHeader }}</p>\n        <button type=\"button\" class=\"delete\" @click=\"$emit('close')\" />\n      </header>\n      <section class=\"modal-card-body\" ref=\"editGood\">\n        <b-tabs>\n          <div class=\"box\">\n            <div v-if=\"good\" class=\"columns is-centered\">\n              <div class=\"column is-centered\">\n\n\n\n      <b-tabs type=\"is-boxed\" position=\"is-centered\">\n\n         <b-tab-item label=\"Datos\">\n                           \n                    <div class=\"center\"><h1>Datos del Bien</h1></div>\n\n                    <div class=\"columns\">\n                      <div class=\"column\">\n                        <b-field label=\"Nombre\">\n                          <b-input\n                            v-model=\"good.namegood\"\n                            placeholder=\"Ingrese el nombre del bien\"\n                          ></b-input>\n                        </b-field>\n                      </div>\n                      <div class=\"column\">\n                        <b-field label=\"Marca\">\n                          <b-input\n                            v-model=\"good.trademark\"\n                            placeholder=\"Ingrese la marca o el modelo del bien\"\n                          ></b-input>\n                        </b-field>\n                      </div>\n\n                       <div class=\"column\">\n                        <b-field label=\"Monto bruto\">\n                           <b-numberinput\n                    min=\"0\"\n                    v-model=\"good.amount\"\n                    type=\"is-info\"\n                    placeholder=\"Ingrese el monto bruto del bien\"\n                  >\n                  </b-numberinput>\n                        </b-field>\n                      </div>\n                    </div>\n                    <div class=\"columns\">\n                      <div class=\"column\">\n                        <b-field label=\"Numero inventario usach\">\n                          <b-input\n                            v-model=\"good.identification_number_usach\"\n                            placeholder=\"Ingrese el numero inventario usach del bien\"\n                          ></b-input>\n                        </b-field>\n                      </div>\n\n                      <div class=\"column\">\n                        <b-field label=\"Numero inventario\">\n                          <b-input\n                            v-model=\"good.identification_number_good\"\n                            placeholder=\"Ingrese el numero inventario del bien\"\n                          ></b-input>\n                        </b-field>\n                      </div>\n                      <div class=\"column\">\n                        <b-field label=\"Fecha de asignación\">\n                          <b-datepicker\n                            v-model=\"aux_date_release\"\n                            locale=\"es-ES\"\n                            placeholder=\"Seleccionar fecha de asignación\"\n                            trap-focus\n                          >\n                          </b-datepicker>\n                        </b-field>\n                      </div>\n                    </div>\n\n                    <div class=\"columns\">\n                      <div class=\"column\">\n                        <b-field label=\"Numero de serie\">\n                          <b-input\n                            v-model=\"good.serie_number\"\n                            placeholder=\"Ingrese el numero de serie del bien\"\n                          ></b-input>\n                        </b-field>\n                      </div>\n\n                      <div class=\"column\">\n                        <b-field label=\"Numero interno\">\n                          <b-input\n                            v-model=\"good.internal_number\"\n                            placeholder=\"Ingrese el numero interno del bien\"\n                          ></b-input>\n                        </b-field>\n                      </div>\n                      <div class=\"column\">\n                        <b-field label=\"Ubicación\">\n                          <b-input\n                            v-model=\"good.location_good\"\n                            placeholder=\"Ingrese la ubicación del bien (Edificio, oficina, en que piso se encuentra..\"\n                          ></b-input>\n                        </b-field>\n                      </div>\n                    </div>\n\n                    <div class=\"columns\">\n\n\n\n                    <div class=\"column\">\n                              <b-field label=\"Tipo de inversión\">\n                                <multiselect\n                                  v-model=\"aux_investment_type_id\"\n                                  :options=\"investment_types.map((type) => type.id)\"\n                                  :custom-label=\"\n                                    (opt) =>\n                                      investment_types.find((x) => x.id === opt).name_investment_type\n                                  \"\n                                  placeholder=\"Seleccionar fuente Tipo de inversión\"\n                                  selectedLabel=\"Seleccionado\"\n                                   selectLabel=\"\"\n                                  :allow-empty=\"true\">\n                                </multiselect>\n                              </b-field>\n                            </div>\n\n                    <div class=\"column\">\n                              <b-field label=\"Fuente de Financiamiento\">\n                                <multiselect\n                                  v-model=\"aux_financial_source_id\"\n                                  :options=\"financial_sources.map((type) => type.id)\"\n                                  :custom-label=\"\n                                    (opt) =>\n                                      financial_sources.find((x) => x.id === opt).name_financial_source\n                                  \"\n                                  placeholder=\"Seleccionar fuente de financiamiento\"\n                                  selectedLabel=\"Seleccionado\"\n                                   selectLabel=\"\"\n                                  :allow-empty=\"true\">\n                                </multiselect>\n                              </b-field>\n                            </div>\n\n                      <div class=\"column\">\n                        <b-field label=\"Fecha de Compra\">\n                          <b-datepicker\n                            v-model=\"aux_date_purchase\"\n                            locale=\"es-ES\"\n                            placeholder=\"Seleccionar fecha de compra\"\n                            trap-focus\n                          >\n                          </b-datepicker>\n                        </b-field>\n                      </div>\n                    </div>\n\n                    <div class=\"columns\">\n                      <div class=\"column\">\n                        <b-field label=\"Descripción\">\n                          <b-input\n                            v-model=\"good.good_description\"\n                            placeholder=\"Ingrese una descripción del bien o el nombre\"\n                            type=\"textarea\"\n                          ></b-input>\n                        </b-field>\n                      </div>\n                    </div>\n\n                    <b-field grouped position=\"is-right\">\n                      <p class=\"control\">\n                        <b-button\n                          label=\"Guardar\"\n                          type=\"is-info\"\n                          @click=\"confirmedit()\"\n                        />\n                      </p>\n                    </b-field>\n                 </b-tab-item>\n\n\n\n\n\n\n\n <b-tab-item label=\"Cargos\">\n\n                \n                    <div class=\"center\"><h1>Designación del Bien</h1></div>\n\n\n                    <div class=\"columns\" v-show='!(good.activegood == 2)'>\n                      <div class=\"column\">\n                        <b-field label=\"Unidad\">\n                          <b-input\n                            v-model=\"good.duty_manager.name_unit\"\n                            type=\"text\"\n                            readonly\n                          ></b-input>\n                        </b-field>\n                      </div>\n\n\n\n\n                      <div class=\"column\">\n                        <b-field label=\"Persona encargada\">\n                          <b-input\n                            v-model=\"good.duty_manager.name_duty_manager\"\n                            type=\"text\"\n                            readonly\n                          ></b-input>\n                        </b-field>\n                      </div>\n                    </div>\n\n                    <div class=\"columns\" v-show='!(good.activegood == 2)'>\n                      <div class=\"column\">\n                        <b-field label=\"Edificio\">\n                          <b-input\n                            v-model=\"good.office.name_building\"\n                            type=\"text\"\n                            readonly\n                          ></b-input>\n                        </b-field>\n                      </div>\n\n                      <div class=\"column\">\n                        <b-field label=\"Dependencia\">\n                          <b-input\n                            v-model=\"good.office.name_office\"\n                            type=\"text\"\n                            readonly\n                          ></b-input>\n                        </b-field>\n                      </div>\n                    </div>\n\n                  <div v-show='(good.activegood == 2)'>\n\n                     <div class=\"notification\">\n                        <div class=\"content\">\n                          <h1 class=\"has-text-left\">Nueva designación</h1>\n\n                          <div class=\"columns\">\n\n\n                            <div class=\"column\">\n                              <b-field label=\"Nueva Unidad\">\n                                <multiselect\n                                  v-model=\"aux_unit_id\"\n                                  :options=\"units.map((type) => type.id)\"\n                                  :custom-label=\"\n                                    (opt) =>\n                                      units.find((x) => x.id === opt).name_unit\n                                  \"\n                                  placeholder=\"Seleccionar Unidad\"\n                                  selectedLabel=\"Seleccionado\"\n                                   selectLabel=\"\"\n                                  :allow-empty=\"true\"\n                                  :disabled=\"\n                                    aux_duty_manager_id !== null ||\n                                    aux_building_id !== null\n                                  \"\n                                  @input=\"\n                                    getdutymanagerbyunit(aux_unit_id);\n                                    getbuildingbyunit(aux_unit_id);\n                                  \"\n                                >\n                                </multiselect>\n                              </b-field>\n                            </div>\n\n\n                            <div class=\"column\">\n                              <b-field label=\"Nueva persona encargada\">\n                                <multiselect\n                                  v-model=\"aux_duty_manager_id\"\n                                  :options=\"managers.map((type) => type.id)\"\n                                  :custom-label=\"\n                                    (opt) =>\n                                      managers.find((x) => x.id === opt)\n                                        .name_duty_manager\n                                  \"\n                                  placeholder=\"Seleccionar persona encargada\"\n                                  selectLabel=\"Presione para seleccionar\"\n                                  selectedLabel=\"Seleccionado\"\n                                  deselectLabel=\"Presione para deseleccionar\"\n                                  :allow-empty=\"true\"\n                                  :disabled=\"aux_unit_id == null\"\n                                >\n                                </multiselect>\n                              </b-field>\n                            </div>\n                          </div>\n                          <div class=\"columns\">\n                            <div class=\"column\">\n                              <b-field label=\"Nuevo Edificio\">\n                                <multiselect\n                                  v-model=\"aux_building_id\"\n                                  :options=\"buildings.map((type) => type.id)\"\n                                  :custom-label=\"\n                                    (opt) =>\n                                      buildings.find((x) => x.id === opt)\n                                        .name_building\n                                  \"\n                                  placeholder=\"Seleccionar Unidad\"\n                                  selectLabel=\"Presione para seleccionar\"\n                                  selectedLabel=\"Seleccionado\"\n                                  deselectLabel=\"Presione para deseleccionar\"\n                                  :allow-empty=\"true\"\n                                  :disabled=\"\n                                    aux_unit_id == null ||\n                                    aux_office_id !== null\n                                  \"\n                                  @input=\"getofficebybuilding(aux_building_id)\"\n                                >\n                                </multiselect>\n                              </b-field>\n                            </div>\n\n                            <div class=\"column\">\n                              <b-field label=\"Nueva Dependencia\">\n                                <multiselect\n                                  v-model=\"aux_office_id\"\n                                  :options=\"offices.map((type) => type.id)\"\n                                  :custom-label=\"\n                                    (opt) =>\n                                      offices.find((x) => x.id === opt)\n                                        .name_office\n                                  \"\n                                  placeholder=\"Seleccionar dependencia\"\n                                  selectLabel=\"Presione para seleccionar\"\n                                  selectedLabel=\"Seleccionado\"\n                                  deselectLabel=\"Presione para deseleccionar\"\n                                  :allow-empty=\"true\"\n                                  :disabled=\"aux_building_id == null\"\n                                >\n                                </multiselect>\n                              </b-field>\n                            </div>\n                          </div>\n                          <b-field grouped position=\"is-right\">\n                            <p class=\"control\">\n                              <b-button\n                                label=\"Guardar\"\n                                type=\"is-info\"\n                                @click=\"confirmeditDes()\"\n                              />\n                            </p>\n                          </b-field>\n                        </div>\n                      </div>\n\n\n\n                  </div>\n\n\n\n                  <div v-show='!(good.activegood == 2)'>\n                    <b-collapse :open=\"false\" aria-id=\"contentIdForA11y1\">\n                      <template #trigger=\"props\">\n                        <b-field grouped position=\"is-right\">\n                          <b-button\n                            label=\"Cambiar designación\"\n                            type=\"is-info\"\n                            aria-controls=\"contentIdForA11y1\"\n                            :aria-expanded=\"props.open\"\n                          />\n                        </b-field>\n                      </template>\n\n\n                      <div class=\"notification\">\n                        <div class=\"content\">\n                          <h1 class=\"has-text-left\">Nueva designación</h1>\n\n                          <div class=\"columns\">\n\n\n                            <div class=\"column\">\n                              <b-field label=\"Nueva Unidad\">\n                                <multiselect\n                                  v-model=\"aux_unit_id\"\n                                  :options=\"units.map((type) => type.id)\"\n                                  :custom-label=\"\n                                    (opt) =>\n                                      units.find((x) => x.id === opt).name_unit\n                                  \"\n                                  placeholder=\"Seleccionar Unidad\"\n                                  selectedLabel=\"Seleccionado\"\n                                   selectLabel=\"\"\n                                  :allow-empty=\"true\"\n                                  :disabled=\"\n                                    aux_duty_manager_id !== null ||\n                                    aux_building_id !== null\n                                  \"\n                                  @input=\"\n                                    getdutymanagerbyunit(aux_unit_id);\n                                    getbuildingbyunit(aux_unit_id);\n                                  \"\n                                >\n                                </multiselect>\n                              </b-field>\n                            </div>\n\n\n                            <div class=\"column\">\n                              <b-field label=\"Nueva persona encargada\">\n                                <multiselect\n                                  v-model=\"aux_duty_manager_id\"\n                                  :options=\"managers.map((type) => type.id)\"\n                                  :custom-label=\"\n                                    (opt) =>\n                                      managers.find((x) => x.id === opt)\n                                        .name_duty_manager\n                                  \"\n                                  placeholder=\"Seleccionar persona encargada\"\n                                  selectLabel=\"Presione para seleccionar\"\n                                  selectedLabel=\"Seleccionado\"\n                                  deselectLabel=\"Presione para deseleccionar\"\n                                  :allow-empty=\"true\"\n                                  :disabled=\"aux_unit_id == null\"\n                                >\n                                </multiselect>\n                              </b-field>\n                            </div>\n                          </div>\n                          <div class=\"columns\">\n                            <div class=\"column\">\n                              <b-field label=\"Nuevo Edificio\">\n                                <multiselect\n                                  v-model=\"aux_building_id\"\n                                  :options=\"buildings.map((type) => type.id)\"\n                                  :custom-label=\"\n                                    (opt) =>\n                                      buildings.find((x) => x.id === opt)\n                                        .name_building\n                                  \"\n                                  placeholder=\"Seleccionar Unidad\"\n                                  selectLabel=\"Presione para seleccionar\"\n                                  selectedLabel=\"Seleccionado\"\n                                  deselectLabel=\"Presione para deseleccionar\"\n                                  :allow-empty=\"true\"\n                                  :disabled=\"\n                                    aux_unit_id == null ||\n                                    aux_office_id !== null\n                                  \"\n                                  @input=\"getofficebybuilding(aux_building_id)\"\n                                >\n                                </multiselect>\n                              </b-field>\n                            </div>\n\n                            <div class=\"column\">\n                              <b-field label=\"Nueva Dependencia\">\n                                <multiselect\n                                  v-model=\"aux_office_id\"\n                                  :options=\"offices.map((type) => type.id)\"\n                                  :custom-label=\"\n                                    (opt) =>\n                                      offices.find((x) => x.id === opt)\n                                        .name_office\n                                  \"\n                                  placeholder=\"Seleccionar dependencia\"\n                                  selectLabel=\"Presione para seleccionar\"\n                                  selectedLabel=\"Seleccionado\"\n                                  deselectLabel=\"Presione para deseleccionar\"\n                                  :allow-empty=\"true\"\n                                  :disabled=\"aux_building_id == null\"\n                                >\n                                </multiselect>\n                              </b-field>\n                            </div>\n                          </div>\n                          <b-field grouped position=\"is-right\">\n                            <p class=\"control\">\n                              <b-button\n                                label=\"Guardar\"\n                                type=\"is-info\"\n                                @click=\"confirmeditDes()\"\n                              />\n                            </p>\n                          </b-field>\n                        </div>\n                      </div>\n                    </b-collapse>\n                    </div>\n                  </b-tab-item>\n\n                   </b-tabs>\n\n              </div>\n            </div>\n\n            <div v-else>\n              <p>Loading</p>\n            </div>\n          </div>\n        </b-tabs>\n      </section>\n    </div>\n  </section>\n</template>\n\n\n<script>\nimport axios from \"axios\";\nimport IndexGoods from \"./index_good.vue\";\nimport moment from \"moment\";\nexport default {\n  name: \"edit_good\",\n  props: [\"queryType\", \"modalHeader\", \"goodId\", \"id\"],\n  components: {\n    \"index-good\": IndexGoods,\n  },\n\n  data() {\n    return {\n      good: null,\n      goods: [],\n      props: [\"id\"],\n      offices: [],\n      units: [],\n      managers: [],\n      buildings: [],\n      financial_sources: [],\n      investment_types: [],\n      aux_good_description: null,\n      aux_identification_number_usach: null,\n      aux_identification_number_good: null,\n      aux_serie_number: null,\n      aux_internal_number: null,\n      aux_trademark: null,\n      aux_location_good: null,\n      aux_unit_id: null,\n      aux_date_release: new Date(),\n      aux_amount: null,\n      aux_date_purchase: new Date(),\n      aux_duty_manager_id: null,\n      aux_building_id: null,\n      aux_investment_type_id: null,\n      aux_financial_source_id: null,\n      aux_office_id: null,\n    };\n  },\n  methods: {\n    async getgoods() {\n      const response = await axios.get(\"/goods/\" + this.id + \".json\");\n      this.loading = true;\n      this.good = response.data;\n      this.aux_date_release = new Date(this.good.date_release);\n      this.aux_financial_source_id = this.good.financial_source_id;\n      this.aux_investment_type_id = this.good.financial_source_id;\n      \n    },\n\n    async getunitactive() {\n      const response = await axios.get(\"/units/showactiveunit.json\");\n      this.units = response.data;\n    },\n\n        async getfinancialsource() {\n      const response = await axios.get(\"http://localhost:3000/financial_sources.json\");\n      this.financial_sources = response.data;\n    },\n\n        async getinvestmenttype() {\n      const response = await axios.get(\"http://localhost:3000/investment_types.json\");\n      this.investment_types = response.data;\n    },\n\n\n    async getdutymanagerbyunit(item) {\n      const response = await axios.get(\n        \"http://localhost:3000/duty_managers/showdutymanagerunit/\" +\n          item +\n          \".json\"\n      );\n      this.managers = response.data;\n    },\n\n    async getbuildingbyunit(item) {\n      const response = await axios.get(\n        \"http://localhost:3000/buildings/showbuildingunit/\" + item + \".json\"\n      );\n      this.buildings = response.data;\n    },\n\n    async getofficebybuilding(item) {\n      const response = await axios.get(\n        \"http://localhost:3000/offices/showofficebuilding/\" + item + \".json\"\n      );\n      this.offices = response.data;\n    },\n\n    async EditClick() {\n      const response = await axios.put(\"/goods/\" + this.id + \".json\", {\n        namegood: this.good.namegood,\n        good_description: this.good.good_description,\n        identification_number_usach: this.good.identification_number_usach,\n        identification_number_good: this.good.identification_number_good,\n        serie_number: this.good.serie_number,\n        internal_number: this.good.internal_number,\n        trademark: this.good.trademark,\n        location_good: this.good.location_good,\n        date_release: this.aux_date_release,\n        amount: this.good.amount,\n        date_purchase: this.good.aux_date_purchase,\n        financial_source_id: this.aux_financial_source_id,\n        investment_type_id: this.aux_investment_type_id,\n      });\n      window.location.href = \"/goods/\" + this.id;\n    },\n\n    confirmedit() {\n      this.$buefy.dialog.confirm({\n        title: \"Editar el Bien\",\n        message: `¿Esta seguro de editar esté bien?`,\n        cancelText: \"Cancelar\",\n        confirmText: \"Guardar\",\n        type: \"is-info\",\n        onConfirm: () => this.EditClick(),\n      });\n    },\n    async EditClickDes() {\n      const response = await axios.put(\"/goods/\" + this.id + \".json\", {\n        duty_manager_id: this.aux_duty_manager_id,\n        office_id: this.aux_office_id,\n        activegood: 1,\n      });\n      window.location.href = \"/goods\";\n    },\n\n    confirmeditDes() {\n      this.$buefy.dialog.confirm({\n        title: \"Editar el Bien\",\n        message: `¿Esta seguro de editar esté bien?`,\n        cancelText: \"Cancelar\",\n        confirmText: \"Guardar\",\n        type: \"is-info\",\n        onConfirm: () => this.EditClickDes(),\n      });\n    },\n\n    \n  },\n  created() {\n    this.getgoods();\n    this.getunitactive();\n    this.getfinancialsource();\n    this.getinvestmenttype();\n  },\n};\n</script>\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}