{"ast":null,"code":"function _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport axios from \"axios\";\nimport NewUser from \"./new_user.vue\"; //import ShowUnit from \"./show_unit.vue\";\n\nimport exportXlsFile from \"export-from-json\";\nexport default {\n  data: function data() {\n    return {\n      users: [],\n      null_units: [],\n      canCancel: [\"escape\"],\n      isModalActive: false,\n      isModalActiveEdit: false,\n      selected: null,\n      \"continue\": false\n    };\n  },\n  components: {\n    NewUser: NewUser //ShowUnit,\n\n  },\n  props: [\"userId\"],\n  methods: {\n    getusers: function getusers() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"/users.json\");\n\n              case 2:\n                response = _context.sent;\n                _this.users = response.data;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    createUser: function createUser() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this2.isModalActive = true;\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    closeModalCreate: function closeModalCreate() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this3.isModalActive = false;\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    }\n  },\n  created: function created() {\n    this.getusers();\n  }\n};","map":{"version":3,"mappings":"+CA0IA,oJ;;;;;;AAAA;AACA,qC,CAEA;;AACA;AACA;EACAA,IADA,kBACA;IACA;MACAC,SADA;MAEAC,cAFA;MAGAC,qBAHA;MAIAC,oBAJA;MAKAC,wBALA;MAMAC,cANA;MAOA;IAPA;EAUA,CAZA;EAaAC;IACAC,gBADA,CAEA;;EAFA,CAbA;EAkBAC,iBAlBA;EAmBAC;IAGAC,QAHA,sBAGA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC,wBADA;;cAAA;gBACAC,QADA;gBAEA;;cAFA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAGA,CANA;IAWAC,UAXA,wBAWA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBACA;;cADA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA,CAbA;IAcAC,gBAdA,8BAcA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBACA;;cADA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA;EAhBA,CAnBA;EAwCAC,OAxCA,qBAwCA;IACA;EAEA;AA3CA","names":["data","users","null_units","canCancel","isModalActive","isModalActiveEdit","selected","components","NewUser","props","methods","getusers","axios","response","createUser","closeModalCreate","created"],"sourceRoot":"app/javascript/components/user","sources":["index_user.vue"],"sourcesContent":["<template>\n    <section class=\"b-tooltips\">\n      <div\n        class=\"box\"\n        style=\"margin-top: 60px; margin-left: 300px; margin-right: 300px\"\n      >\n        <h1>Usuarios</h1>\n  \n\n            <div class=\"has-text-right\">\n              <b-button\n                label=\"Añadir Usuario\"\n                type=\"is-info\"\n                icon-left=\"plus\"\n                @click=\"createUser()\"\n              ></b-button>\n            </div>\n            <div> \n              <b-modal\n                :active=\"isModalActive\"\n                aria-modal\n                has-modal-card\n                :destroy-on-hide=\"true\"\n                aria-role=\"dialog\"\n                width=\"100%\"\n                :can-cancel=\"canCancel\"\n              >\n                <template>\n                  <new-user\n                    modal-cancel=\"true\"\n                    :modal-header=\"'Registro de Usuario'\"\n                    query-type=\"create\"\n                    @close=\"closeModalCreate\"\n                  ></new-user>\n                </template>\n              </b-modal>\n  \n\n  \n\n  \n            </div>\n            <div class=\"column\">\n              <b-table\n                id=\"table\"\n                :data=\"users\"\n                :paginated=\"true\"\n                per-page=\"8\"\n                striped\n                hoverable\n                :pagination-simple=\"false\"\n                pagination-active-color=\"hsl(0, 0%, 0%)\"\n                pagination-position=\"bottom\"\n                default-sort-direction=\"asc\"\n                sort-icon=\"arrow-up\"\n                aria-next-label=\"Siguiente\"\n                aria-previous-label=\"Anterior\"\n                aria-page-label=\"Página\"\n                aria-current-label=\"Página actual\"\n              >\n                <b-table-column\n                  :visible=\"false\"\n                  field=\"id\"\n                  label=\"ID\"\n                  sortable\n                  searchable\n                >\n  \n                  <template v-slot=\"props\">\n                    {{ props.row.id }}\n                  </template>\n                </b-table-column>\n  \n                \n  \n                <b-table-column\n                  field=\"full_name\"\n                  label=\"Nombre Usuario\"\n                  sortable\n                  searchable\n                >\n  \n                  <template v-slot=\"props\">\n                 {{ props.row.full_name }}\n             \n                  </template>\n                </b-table-column>\n  \n                <b-table-column\n                  field=\"email\"\n                  label=\"Correo\"\n                  sortable\n                  searchable\n                >\n  \n                  <template v-slot=\"props\">\n                    {{ props.row.email }}\n                  </template>\n                </b-table-column>\n  \n                <b-table-column\n                  field=\"rut\"\n                  label=\"RUT\"\n                  sortable\n                  searchable>\n  \n                  <template v-slot=\"props\">\n                    {{ props.row.rut }}\n                  </template>\n                </b-table-column>\n  \n  \n  \n  \n  \n                <b-table-column ffield=\"id\" width=\"10\" label=\"Acciones\" v-slot=\"props\" size=\"is-small\">\n                  <div class=\"columns\">\n                    <div class=\"column\">\n                      <b-tooltip label=\"Editar\" type=\"is-info\">\n                        <b-icon pack=\"fas\" icon=\"pen\" size=\"is-medium\" @click.native=\"editUnit(props.row.id)\" />\n                      </b-tooltip>\n                    </div>\n                  </div>\n  \n  \n  \n                </b-table-column>\n  \n  \n              </b-table>\n            </div>\n\n      </div>\n    </section>\n  </template>\n  \n  \n  <script>\n  import axios from \"axios\";\n  import NewUser from \"./new_user.vue\";\n \n  //import ShowUnit from \"./show_unit.vue\";\n  import exportXlsFile from \"export-from-json\";\n  export default {\n    data() {\n      return {\n        users: [],\n        null_units: [],\n        canCancel: [\"escape\"],\n        isModalActive: false,\n        isModalActiveEdit: false,\n        selected: null,\n        continue: false,\n\n      };\n    },\n    components: {\n      NewUser,\n      //ShowUnit,\n\n    },\n    props: [\"userId\"],\n    methods: {\n  \n      \n          async getusers() {\n        const response = await axios.get(\"/users.json\");\n        this.users = response.data;\n      },\n  \n\n  \n\n      async createUser() {\n        this.isModalActive = true;\n      },\n      async closeModalCreate() {\n        this.isModalActive = false;\n      },\n  \n    },\n  \n  \n    created() {\n      this.getusers();\n\n    },\n  \n  };\n  </script>\n  \n  \n  "]},"metadata":{},"sourceType":"module"}