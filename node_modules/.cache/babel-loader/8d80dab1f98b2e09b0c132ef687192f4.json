{"ast":null,"code":"import './chunk-1fafdf15.js';\nimport { merge } from './helpers.js';\nimport { V as VueInstance } from './chunk-652f2dad.js';\nimport { r as registerComponent, a as registerComponentProgrammatic, u as use } from './chunk-cca88db8.js';\nimport './chunk-42f463e6.js';\nimport { M as Modal } from './chunk-742a9694.js';\nexport { M as BModal } from './chunk-742a9694.js';\nvar localVueInstance;\nvar ModalProgrammatic = {\n  open: function open(params) {\n    var parent;\n\n    if (typeof params === 'string') {\n      params = {\n        content: params\n      };\n    }\n\n    var defaultParam = {\n      programmatic: true\n    };\n\n    if (params.parent) {\n      parent = params.parent;\n      delete params.parent;\n    }\n\n    var slot;\n\n    if (Array.isArray(params.content)) {\n      slot = params.content;\n      delete params.content;\n    }\n\n    var propsData = merge(defaultParam, params);\n    var vm = typeof window !== 'undefined' && window.Vue ? window.Vue : localVueInstance || VueInstance;\n    var ModalComponent = vm.extend(Modal);\n    var component = new ModalComponent({\n      parent: parent,\n      el: document.createElement('div'),\n      propsData: propsData\n    });\n\n    if (slot) {\n      component.$slots[\"default\"] = slot;\n      component.$forceUpdate();\n    }\n\n    return component;\n  }\n};\nvar Plugin = {\n  install: function install(Vue) {\n    localVueInstance = Vue;\n    registerComponent(Vue, Modal);\n    registerComponentProgrammatic(Vue, 'modal', ModalProgrammatic);\n  }\n};\nuse(Plugin);\nexport default Plugin;\nexport { ModalProgrammatic };","map":null,"metadata":{},"sourceType":"module"}