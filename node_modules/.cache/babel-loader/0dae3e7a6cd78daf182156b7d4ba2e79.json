{"ast":null,"code":"function _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport axios from \"axios\";\nexport default {\n  name: \"new_good_condition\",\n  props: ['queryType', 'modalHeader', \"id\"],\n  data: function data() {\n    return {\n      selected: null,\n      goods: [],\n      offices: [],\n      units: [],\n      managers: [],\n      buildings: [],\n      aux_office_id: null,\n      aux_unit_id: null,\n      aux_building_id: null,\n      reparable: ['SI', 'NO'],\n      aux_link: null,\n      aux_namegood: null,\n      aux_lost_date: new Date(),\n      aux_loss_detail: null,\n      aux_destruction_date: new Date(),\n      aux_destruction_detail: null,\n      aux_repairable: null,\n      aux_request_date: new Date(),\n      aux_request_status: null,\n      aux_income_reason: null,\n      aux_date_entry: new Date(),\n      aux_good_id: null,\n      aux_condition_id: null,\n      aux_activegood: 1\n    };\n  },\n  methods: {\n    getgood: function getgood() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"/goods/\" + _this.id + \".json\");\n\n              case 2:\n                response = _context.sent;\n                _this.loading = true;\n                _this.good = response.data;\n                _this.aux_namegood = _this.good.namegood;\n                _this.aux_good_id = _this.good.id;\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    getgoods: function getgoods() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get(\"http://localhost:3000/goods.json\");\n\n              case 2:\n                response = _context2.sent;\n                _this2.goods = response.data;\n                console.log(_this2.goods);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    getunit: function getunit() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios.get(\"http://localhost:3000/units.json\");\n\n              case 2:\n                response = _context3.sent;\n                _this3.units = response.data;\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    getbuildingbyunit: function getbuildingbyunit(item) {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return axios.get(\"http://localhost:3000/buildings/showbuildingunit/\" + item + \".json\");\n\n              case 2:\n                response = _context4.sent;\n                _this4.buildings = response.data;\n                console.log(_this4.buildings);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    getofficebybuilding: function getofficebybuilding(item) {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return axios.get(\"http://localhost:3000/offices/showofficebuilding/\" + item + \".json\");\n\n              case 2:\n                response = _context5.sent;\n                _this5.offices = response.data;\n                console.log(_this5.offices);\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    },\n    getgoodbyoffice: function getgoodbyoffice(item) {\n      var _this6 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return axios.get(\"/goods/showgoodoffice/\" + item + \".json\");\n\n              case 2:\n                response = _context6.sent;\n                _this6.goods = response.data;\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    },\n    reportLost: function reportLost() {\n      var _this7 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return axios.post(\"/condition_goods.json\", {\n                  lost_date: _this7.aux_lost_date,\n                  loss_detail: _this7.aux_loss_detail,\n                  link: _this7.aux_link,\n                  good_id: _this7.aux_good_id,\n                  condition_id: 3\n                });\n\n              case 2:\n                response = _context7.sent;\n                window.location.href = \"/condition_goods\";\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    },\n    reportDestruction: function reportDestruction() {\n      var _this8 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return axios.post(\"/condition_goods.json\", {\n                  destruction_date: _this8.aux_destruction_date,\n                  destruction_detail: _this8.aux_destruction_detail,\n                  repairable: _this8.aux_repairable,\n                  link: _this8.aux_link,\n                  good_id: _this8.aux_good_id,\n                  condition_id: 4\n                });\n\n              case 2:\n                response = _context8.sent;\n                console.log(_this8.condition_id);\n                console.log(_this8.aux_good_id);\n                window.location.href = \"/condition_goods\";\n\n              case 6:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    },\n    reportExcluded: function reportExcluded() {\n      var _this9 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return axios.post(\"/condition_goods.json\", {\n                  request_date: _this9.aux_request_date,\n                  request_status: _this9.aux_request_status,\n                  income_reason: _this9.aux_income_reason,\n                  date_entry: _this9.aux_date_entry,\n                  link: _this9.aux_link,\n                  good_id: _this9.aux_good_id,\n                  condition_id: 2\n                });\n\n              case 2:\n                response = _context9.sent;\n                console.log(_this9.goods);\n                window.location.href = \"/condition_goods\";\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }))();\n    },\n    reportRequest: function reportRequest() {\n      var _this10 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return axios.post(\"/condition_goods.json\", {\n                  request_date: _this10.aux_request_date,\n                  request_status: _this10.aux_request_status,\n                  income_reason: _this10.aux_income_reason,\n                  link: _this10.aux_link,\n                  good_id: _this10.aux_good_id,\n                  condition_id: 1\n                });\n\n              case 2:\n                response = _context10.sent;\n                console.log(_this10.goods);\n                window.location.href = \"/condition_goods\";\n\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }))();\n    },\n    confirmregister: function confirmregister() {\n      var _this11 = this;\n\n      this.$buefy.dialog.confirm({\n        title: \"Registrar el Bien\",\n        message: \"\\xBFEsta seguro de registrar est\\xE9 bien?\",\n        cancelText: \"Cancelar\",\n        confirmText: \"Registrar\",\n        type: \"is-info\",\n        onConfirm: function onConfirm() {\n          return _this11.createClick();\n        }\n      });\n    },\n    deleteDropFile: function deleteDropFile(index) {\n      this.dropFiles.splice(index, 1);\n    }\n  },\n  created: function created() {\n    this.getgoods();\n    this.getgood();\n    this.getunit();\n  }\n};","map":{"version":3,"mappings":"+CAihBA,oJ;;;;;;AAAA;AACA;EACAA,0BADA;EAEAC,QACA,WADA,EACA,aADA,EACA,IADA,CAFA;EAKAC,IALA,kBAKA;IACA;MACAC,cADA;MAEAC,SAFA;MAGAC,WAHA;MAIAC,SAJA;MAKAC,YALA;MAMAC,aANA;MAOAC,mBAPA;MAQAC,iBARA;MASAC,qBATA;MAUAC,uBAVA;MAWAC,cAXA;MAYAC,kBAZA;MAaAC,yBAbA;MAcAC,qBAdA;MAgBAC,gCAhBA;MAiBAC,4BAjBA;MAkBAC,oBAlBA;MAoBAC,4BApBA;MAqBAC,wBArBA;MAsBAC,uBAtBA;MAuBAC,0BAvBA;MAyBAC,iBAzBA;MA0BAC,sBA1BA;MA4BAC;IA5BA;EA8BA,CApCA;EAqCAC;IACAC,OADA,qBACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC,yCADA;;cAAA;gBACAC,QADA;gBAEA;gBACA;gBACA;gBACA;;cALA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAMA,CAPA;IAQAC,QARA,sBAQA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAF,6CADA;;cAAA;gBACAC,QADA;gBAEA;gBACAE;;cAHA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAIA,CAZA;IAcAC,OAdA,qBAcA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAJ,6CADA;;cAAA;gBACAC,QADA;gBAEA;;cAFA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAIA,CAlBA;IAoBAI,iBApBA,6BAoBAC,IApBA,EAoBA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAN,UACA,oEADA,CADA;;cAAA;gBACAC,QADA;gBAIA;gBACAE;;cALA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAMA,CA1BA;IA4BAI,mBA5BA,+BA4BAD,IA5BA,EA4BA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAN,UACA,oEADA,CADA;;cAAA;gBACAC,QADA;gBAIA;gBACAE;;cALA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAMA,CAlCA;IAmCAK,eAnCA,2BAmCAF,IAnCA,EAmCA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAN,oDADA;;cAAA;gBACAC,QADA;gBAEA;;cAFA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAGA,CAtCA;IA4CAQ,UA5CA,wBA4CA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAT;kBACAU,+BADA;kBAEAC,mCAFA;kBAGAC,qBAHA;kBAIAC,2BAJA;kBAKAC;gBALA,EADA;;cAAA;gBACAb,QADA;gBAQAc;;cARA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IASA,CArDA;IAuDAC,iBAvDA,+BAuDA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAhB;kBACAiB,6CADA;kBAEAC,iDAFA;kBAGAC,iCAHA;kBAIAP,qBAJA;kBAKAC,2BALA;kBAMAC;gBANA,EADA;;cAAA;gBACAb,QADA;gBASAE;gBACAA;gBACAY;;cAXA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAYA,CAnEA;IAqEAK,cArEA,4BAqEA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACApB;kBAEAqB,qCAFA;kBAGAC,yCAHA;kBAIAC,uCAJA;kBAKAC,iCALA;kBAMAZ,qBANA;kBAOAC,2BAPA;kBAQAC;gBARA,EADA;;cAAA;gBACAb,QADA;gBAYAE;gBACAY;;cAbA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAcA,CAnFA;IAqFAU,aArFA,2BAqFA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAzB;kBAEAqB,sCAFA;kBAGAC,0CAHA;kBAIAC,wCAJA;kBAKAX,sBALA;kBAMAC,4BANA;kBAOAC;gBAPA,EADA;;cAAA;gBACAb,QADA;gBAWAE;gBACAY;;cAZA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAaA,CAlGA;IA0GAW,eA1GA,6BA0GA;MAAA;;MACA;QACAC,0BADA;QAEAC,qDAFA;QAGAC,sBAHA;QAIAC,wBAJA;QAKAC,eALA;QAMAC;UAAA;QAAA;MANA;IAQA,CAnHA;IAoHAC,cApHA,0BAoHAC,KApHA,EAoHA;MACA;IACA;EAtHA,CArCA;EA6JAC,OA7JA,qBA6JA;IACA;IACA;IACA;EAEA;AAlKA","names":["name","props","data","selected","goods","offices","units","managers","buildings","aux_office_id","aux_unit_id","aux_building_id","reparable","aux_link","aux_namegood","aux_lost_date","aux_loss_detail","aux_destruction_date","aux_destruction_detail","aux_repairable","aux_request_date","aux_request_status","aux_income_reason","aux_date_entry","aux_good_id","aux_condition_id","aux_activegood","methods","getgood","axios","response","getgoods","console","getunit","getbuildingbyunit","item","getofficebybuilding","getgoodbyoffice","reportLost","lost_date","loss_detail","link","good_id","condition_id","window","reportDestruction","destruction_date","destruction_detail","repairable","reportExcluded","request_date","request_status","income_reason","date_entry","reportRequest","confirmregister","title","message","cancelText","confirmText","type","onConfirm","deleteDropFile","index","created"],"sourceRoot":"app/javascript/components/condition_good","sources":["new_condition_good.vue"],"sourcesContent":["  <template>\n  <section>\n\n    <div class=\"modal-card\" style=\"width: 62em; height: auto\">\n      <header class=\"modal-card-head\">\n        <p class=\"modal-card-title\">{{ modalHeader }}</p>\n        <button type=\"button\" class=\"delete\" @click=\"$emit('close')\" />\n      </header>\n      <section class=\"modal-card-body\" ref=\"newConditionGood\">\n\n\n        <div class=\"box\">\n          <b-tabs type=\"is-boxed\" position=\"is-centered\">\n            \n\n\n                <b-tab-item label=\"Bien a dar de baja\">\n                  <div class=\"columns is-centered\">\n              <div class=\"column is-centered\">\n          <div class=\"center\">\n            <h1>Dar de baja un bien</h1>\n          </div>\n          <br />\n\n\n          \n                  <div class=\"columns\">\n\n\n                <div class=\"column\">\n                <b-field label=\"Unidad\" >\n                  <multiselect\n                    v-model=\"aux_unit_id\"\n                    :options=\"units.map((type) => type.id)\"\n                    :custom-label=\"\n                      (opt) => units.find((x) => x.id === opt).name_unit\n                    \"\n                    placeholder=\"Seleccionar Unidad\"\n                     selectLabel=\"\"\n                    selectedLabel=\"Seleccionado\"\n                    deselectLabel=\"Presione para deseleccionar\"\n                    :allow-empty=\"true\"\n                    :disabled=\"aux_building_id !== null \"\n                    @input=\"\n                      getbuildingbyunit(aux_unit_id);\n                    \"\n                  >\n                  </multiselect>\n                </b-field>\n              </div>\n\n\n               <div class=\"column\">\n                <b-field label=\"Edificio\" >\n                  <multiselect\n                    v-model=\"aux_building_id\"\n                    :options=\"buildings.map((type) => type.id)\"\n                    :custom-label=\"\n                      (opt) => buildings.find((x) => x.id === opt).name_building\n                    \"\n                    placeholder=\"Seleccionar Unidad\"\n                    selectedLabel=\"Seleccionado\"\n                    deselectLabel=\"Presione para deseleccionar\"\n                    :allow-empty=\"true\"\n                     :disabled=\"aux_unit_id == null || aux_office_id !== null\"\n                    @input=\"getofficebybuilding(aux_building_id)\"\n                  >\n                    \n                  </multiselect>\n                </b-field>\n              </div>\n</div>\n<div class=\"columns\">\n               <div class=\"column\">\n                <b-field label=\"Dependencia\">\n                  <multiselect\n                    v-model=\"aux_office_id\"\n                    :options=\"offices.map((type) => type.id)\"\n                    :custom-label=\"\n                      (opt) => offices.find((x) => x.id === opt).name_office\n                    \"\n                    placeholder=\"Seleccionar dependencia\"\n                    selectLabel=\"Presione para seleccionar\"\n                    selectedLabel=\"Seleccionado\"\n                    deselectLabel=\"Presione para deseleccionar\"\n                    :allow-empty=\"true\"\n                    :disabled=\"aux_building_id == null|| aux_good_id !== null\"\n                    @input=\"getgoodbyoffice(aux_office_id)\"\n                  >\n                  </multiselect>\n                </b-field>\n              </div>\n\n\n               <div class=\"column\">\n                <b-field label=\"Bien\" >\n                  <multiselect\n                    v-model=\"aux_good_id\"\n                    :options=\"goods.map((type) => type.id)\"\n                    :custom-label=\"\n                      (opt) =>\n                        goods.find((x) => x.id === opt).namegood\n                    \"\n                    placeholder=\"Seleccionar Bien\"\n                    selectLabel=\"Presione para seleccionar\"\n                    selectedLabel=\"Seleccionado\"\n                    deselectLabel=\"Presione para deseleccionar\"\n                    :allow-empty=\"true\"\n                    :disabled=\"aux_office_id == null\">\n                  </multiselect>\n                </b-field>\n              </div>\n                  </div>\n\n                  <div class=\"columns\">\n                    <div class=\"column\">\n                      <b-field label=\"Link de documento enlace\">\n                        <b-input v-model=\"aux_link\" placeholder=\"Ingrese el link del documento correspondiente\"></b-input>\n                      </b-field>\n                    </div>\n                  </div>\n\n                  <div class=\"columns\">\n                    <div class=\"column\">\n                      <b-field label=\"Motivo de ingreso\">\n                        <b-input v-model=\"aux_income_reason\" placeholder=\"Ingrese detalles del motivo de ingreso\"\n                          type=\"textarea\"></b-input>\n                      </b-field>\n                    </div>\n                  </div>\n\n\n                  <b-field grouped position=\"is-right\">\n                    <p class=\"control\">\n                      <b-button label=\"Solicitar dar de baja\" type=\"is-info\" @click=\"reportRequest()\" />\n                    </p>\n                  </b-field>\n                  </div>\n                  </div>\n                </b-tab-item>\n\n\n\n\n\n                <!-- Comment\n\n                <b-step-item step=\"2\" label=\"Reportar bien para enviar a la bodega de excluidos\" :clickable=\"true\">\n            <div class=\"columns\">\n\n                              <div class=\"column\">\n                <b-field label=\"Bienes\">\n                  <multiselect\n                    v-model=\"aux_good_id\"\n                    :options=\"goods.map((type) => type.id)\"\n                    :custom-label=\"\n                      (opt) =>\n                        goods.find((x) => x.id === opt).namegood\n                    \"\n                    placeholder=\"Seleccionar Bien\"\n                    selectLabel=\"Presione para seleccionar\"\n                    selectedLabel=\"Seleccionado\"\n                    deselectLabel=\"Presione para deseleccionar\"\n                    :allow-empty=\"true\"\n                  >\n                  </multiselect>\n                </b-field>\n              </div>\n\n\n            </div>\n           \n            <div class=\"columns\">\n\n              <div class=\"column\">\n                <b-field label=\"Fecha de solicitud\">\n                  <b-datepicker\n                    v-model=\"aux_request_date\"\n                    locale=\"es-ES\"\n                    placeholder=\"Seleccionar fecha de solicitud\"\n                    trap-focus\n                  >\n                  </b-datepicker>\n                </b-field>\n              </div>\n\n                            <div class=\"column\">\n                <b-field label=\"Fecha de ingreso\">\n                  <b-datepicker\n                    v-model=\"aux_date_entry\"\n                    locale=\"es-ES\"\n                    placeholder=\"Seleccionar fecha de ingreso\"\n                    trap-focus\n                  >\n                  </b-datepicker>\n                </b-field>\n              </div>\n            </div>\n\n\n\n\n                         <div class=\"columns\">\n              \n              <div class=\"column\">\n                <b-field label=\"Motivo de ingreso\">\n                  <b-input\n                    v-model=\"aux_income_reason\"\n                    placeholder=\"Ingrese detalles del motivo de ingreso\"\n                    type=\"textarea\"\n                  ></b-input>\n                </b-field>\n              </div>\n            </div>\n\n\n            <b-field grouped position=\"is-right\">\n              <p class=\"control\">\n                <b-button\n                  label=\"Agregar Bien\"\n                  type=\"is-info\"\n                  @click=\"reportExcluded()\"\n                />\n              </p>\n            </b-field>\n            </b-step-item>\n\n -->\n\n                <b-tab-item label=\"Reportar bien Perdido\">\n                  <div class=\"columns is-centered\">\n              <div class=\"column is-centered\">\n                          <div class=\"center\">\n            <h1>Reportar bien Perdido</h1>\n          </div>\n          <br />\n\n                  <div class=\"columns\">\n\n\n                <div class=\"column\" v-show='!(aux_good_id != null)'>\n                <b-field label=\"Unidad\" >\n                  <multiselect\n                    v-model=\"aux_unit_id\"\n                    :options=\"units.map((type) => type.id)\"\n                    :custom-label=\"\n                      (opt) => units.find((x) => x.id === opt).name_unit\n                    \"\n                    placeholder=\"Seleccionar Unidad\"\n                     selectLabel=\"\"\n                    selectedLabel=\"Seleccionado\"\n                    deselectLabel=\"Presione para deseleccionar\"\n                    :allow-empty=\"true\"\n                    :disabled=\"aux_building_id !== null \"\n                    @input=\"\n                      getbuildingbyunit(aux_unit_id);\n                    \"\n                  >\n                  </multiselect>\n                </b-field>\n              </div>\n\n\n               <div class=\"column\" v-show='!(aux_good_id != null)'>\n                <b-field label=\"Edificio\" >\n                  <multiselect\n                    v-model=\"aux_building_id\"\n                    :options=\"buildings.map((type) => type.id)\"\n                    :custom-label=\"\n                      (opt) => buildings.find((x) => x.id === opt).name_building\n                    \"\n                    placeholder=\"Seleccionar Unidad\"\n                    selectedLabel=\"Seleccionado\"\n                    deselectLabel=\"Presione para deseleccionar\"\n                    :allow-empty=\"true\"\n                     :disabled=\"aux_unit_id == null || aux_office_id !== null\"\n                    @input=\"getofficebybuilding(aux_building_id)\"\n                  >\n                    \n                  </multiselect>\n                </b-field>\n              </div>\n</div>\n<div class=\"columns\">\n               <div class=\"column\" v-show='!(aux_good_id != null)'>\n                <b-field label=\"Dependencia\">\n                  <multiselect\n                    v-model=\"aux_office_id\"\n                    :options=\"offices.map((type) => type.id)\"\n                    :custom-label=\"\n                      (opt) => offices.find((x) => x.id === opt).name_office\n                    \"\n                    placeholder=\"Seleccionar dependencia\"\n                    selectLabel=\"Presione para seleccionar\"\n                    selectedLabel=\"Seleccionado\"\n                    deselectLabel=\"Presione para deseleccionar\"\n                    :allow-empty=\"true\"\n                    :disabled=\"aux_building_id == null|| aux_good_id !== null\"\n                    @input=\"getgoodbyoffice(aux_office_id)\"\n                  >\n                  </multiselect>\n                </b-field>\n              </div>\n\n\n               <div class=\"column\">\n                <b-field label=\"Bien\" >\n                  <multiselect\n                    v-model=\"aux_good_id\"\n                    :options=\"goods.map((type) => type.id)\"\n                    :custom-label=\"\n                      (opt) =>\n                        goods.find((x) => x.id === opt).namegood\n                    \"\n                    placeholder=\"Seleccionar Bien\"\n                    selectLabel=\"Presione para seleccionar\"\n                    selectedLabel=\"Seleccionado\"\n                    deselectLabel=\"Presione para deseleccionar\"\n                    :allow-empty=\"true\"\n                    :disabled=\"aux_office_id == null\">\n                  </multiselect>\n                </b-field>\n              </div>\n\n                  </div>\n\n                  <div class=\"columns\">\n\n                    <div class=\"column\">\n                      <b-field label=\"Fecha de perdida\">\n                        <b-datepicker v-model=\"aux_lost_date\" locale=\"es-ES\" placeholder=\"Seleccionar fecha de perdida\"\n                          trap-focus>\n                        </b-datepicker>\n                      </b-field>\n                    </div>\n                  </div>\n\n                                    <div class=\"columns\">\n\n                    <div class=\"column\">\n                      <b-field label=\"Link de documento enlace\">\n                        <b-input v-model=\"aux_link\" placeholder=\"Ingrese el link del documento correspondiente\"></b-input>\n                      </b-field>\n                    </div>\n                  </div>\n\n\n                  <div class=\"columns\">\n\n                    <div class=\"column\">\n                      <b-field label=\"Descripción de perdida\">\n                        <b-input v-model=\"aux_loss_detail\" placeholder=\"Ingrese detalles de la perdida del bien\"\n                          type=\"textarea\"></b-input>\n                      </b-field>\n                    </div>\n                  </div>\n\n                  <b-field grouped position=\"is-right\">\n                    <p class=\"control\">\n                      <b-button label=\"Reportar pérdida\" type=\"is-info\" @click=\"reportLost()\" />\n                    </p>\n                  </b-field>\n</div>\n</div>\n                </b-tab-item>\n\n\n\n\n\n\n                <b-tab-item label=\"Reportar bien Destruido\">\n                  <div class=\"columns is-centered\">\n              <div class=\"column is-centered\">\n\n                      <div class=\"center\">\n            <h1>Reportar bien Destruido</h1>\n          </div>\n          <br />\n                  <div class=\"columns\">\n\n\n                <div class=\"column\">\n                <b-field label=\"Unidad\" >\n                  <multiselect\n                    v-model=\"aux_unit_id\"\n                    :options=\"units.map((type) => type.id)\"\n                    :custom-label=\"\n                      (opt) => units.find((x) => x.id === opt).name_unit\n                    \"\n                    placeholder=\"Seleccionar Unidad\"\n                     selectLabel=\"\"\n                    selectedLabel=\"Seleccionado\"\n                    deselectLabel=\"Presione para deseleccionar\"\n                    :allow-empty=\"true\"\n                    :disabled=\"aux_building_id !== null \"\n                    @input=\"\n                      getbuildingbyunit(aux_unit_id);\n                    \"\n                  >\n                  </multiselect>\n                </b-field>\n              </div>\n\n\n               <div class=\"column\">\n                <b-field label=\"Edificio\" >\n                  <multiselect\n                    v-model=\"aux_building_id\"\n                    :options=\"buildings.map((type) => type.id)\"\n                    :custom-label=\"\n                      (opt) => buildings.find((x) => x.id === opt).name_building\n                    \"\n                    placeholder=\"Seleccionar Unidad\"\n                    selectedLabel=\"Seleccionado\"\n                    deselectLabel=\"Presione para deseleccionar\"\n                    :allow-empty=\"true\"\n                     :disabled=\"aux_unit_id == null || aux_office_id !== null\"\n                    @input=\"getofficebybuilding(aux_building_id)\"\n                  >\n                    \n                  </multiselect>\n                </b-field>\n              </div>\n</div>\n<div class=\"columns\">\n               <div class=\"column\">\n                <b-field label=\"Dependencia\">\n                  <multiselect\n                    v-model=\"aux_office_id\"\n                    :options=\"offices.map((type) => type.id)\"\n                    :custom-label=\"\n                      (opt) => offices.find((x) => x.id === opt).name_office\n                    \"\n                    placeholder=\"Seleccionar dependencia\"\n                    selectLabel=\"Presione para seleccionar\"\n                    selectedLabel=\"Seleccionado\"\n                    deselectLabel=\"Presione para deseleccionar\"\n                    :allow-empty=\"true\"\n                    :disabled=\"aux_building_id == null|| aux_good_id !== null\"\n                    @input=\"getgoodbyoffice(aux_office_id)\"\n                  >\n                  </multiselect>\n                </b-field>\n              </div>\n\n\n               <div class=\"column\">\n                <b-field label=\"Bien\" >\n                  <multiselect\n                    v-model=\"aux_good_id\"\n                    :options=\"goods.map((type) => type.id)\"\n                    :custom-label=\"\n                      (opt) =>\n                        goods.find((x) => x.id === opt).namegood\n                    \"\n                    placeholder=\"Seleccionar Bien\"\n                    selectLabel=\"Presione para seleccionar\"\n                    selectedLabel=\"Seleccionado\"\n                    deselectLabel=\"Presione para deseleccionar\"\n                    :allow-empty=\"true\"\n                    :disabled=\"aux_office_id == null\">\n                  </multiselect>\n                </b-field>\n              </div>\n\n                  </div>\n                  <div class=\"columns\">\n\n                    <div class=\"column\">\n                      <b-field label=\"Fecha de destrcción\">\n                        <b-datepicker v-model=\"aux_destruction_date\" locale=\"es-ES\"\n                          placeholder=\"Seleccionar fecha de destrcción\" trap-focus>\n                        </b-datepicker>\n                      </b-field>\n                    </div>\n                  </div>\n\n\n                  <div class=\"columns\">\n                    <div class=\"column\">\n                      <b-field label=\"Link de documento enlace\">\n                        <b-input v-model=\"aux_link\" placeholder=\"Ingrese el link del documento correspondiente\"></b-input>\n                      </b-field>\n                    </div>\n                  </div>\n\n\n                  <div class=\"columns\">\n\n                    <div class=\"column\">\n                      <b-field label=\"Descripción de la destrucción\">\n                        <b-input v-model=\"aux_destruction_detail\"\n                          placeholder=\"Ingrese detalles de la destrucción del bien\" type=\"textarea\"></b-input>\n                      </b-field>\n                    </div>\n                  </div>\n\n                  <div class=\"columns\">\n                    <div class=\"column\">\n                      <b-field label=\"Reparable\">\n\n                        <multiselect v-model=\"aux_repairable\" :options=\"reparable\" placeholder=\"¿Es reaparable?\"\n                          selectLabel=\"Presione para seleccionar\" selectedLabel=\"Seleccionado\"\n                          deselectLabel=\"Presione para deseleccionar\" :allow-empty=\"true\">\n                        </multiselect>\n                      </b-field>\n                    </div>\n                  </div>\n\n                  <b-field grouped position=\"is-right\">\n                    <p class=\"control\">\n                      <b-button label=\"Reportar bien destruido\" type=\"is-info\" @click=\"reportDestruction()\" />\n                    </p>\n                  </b-field>\n                  </div>\n                  </div>\n                </b-tab-item>\n\n\n  \n          </b-tabs>\n        </div>\n      </section>\n    </div>\n  </section>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"new_good_condition\",\n  props: [\n    'queryType', 'modalHeader', \"id\"\n  ],\n  data() {\n    return {\n      selected: null,\n      goods: [],\n      offices: [],\n      units: [],\n      managers: [],\n      buildings: [],\n      aux_office_id: null,\n      aux_unit_id: null,\n      aux_building_id: null,\n      reparable: ['SI', 'NO'],\n      aux_link: null,\n      aux_namegood: null,\n      aux_lost_date: new Date(), \n      aux_loss_detail: null,\n\n      aux_destruction_date: new Date(),\n      aux_destruction_detail: null,\n      aux_repairable: null,\n\n      aux_request_date: new Date(),\n      aux_request_status: null,\n      aux_income_reason: null,\n      aux_date_entry: new Date(),\n\n      aux_good_id: null,\n      aux_condition_id: null,\n\n      aux_activegood: 1,\n    };\n  },\n  methods: {\n      async getgood() {\n      const response = await axios.get(\"/goods/\" + this.id + \".json\");\n      this.loading = true;\n      this.good = response.data;\n      this.aux_namegood = this.good.namegood;\n      this.aux_good_id = this.good.id;\n    },\n    async getgoods() {\n      const response = await axios.get(\"http://localhost:3000/goods.json\");\n      this.goods = response.data;\n      console.log(this.goods);\n    },\n\n    async getunit() {\n      const response = await axios.get(\"http://localhost:3000/units.json\");\n      this.units = response.data;\n\n    },\n\n    async getbuildingbyunit(item) {\n      const response = await axios.get(\n        \"http://localhost:3000/buildings/showbuildingunit/\" + item + \".json\"\n      );\n      this.buildings = response.data;\n      console.log(this.buildings);\n    },\n\n    async getofficebybuilding(item) {\n      const response = await axios.get(\n        \"http://localhost:3000/offices/showofficebuilding/\" + item + \".json\"\n      );\n      this.offices = response.data;\n      console.log(this.offices);\n    },\n        async getgoodbyoffice(item) {\n      const response = await axios.get(\"/goods/showgoodoffice/\" + item + \".json\");\n      this.goods = response.data;\n    },\n\n\n\n\n\n    async reportLost() {\n      const response = await axios.post(\"/condition_goods.json\", {\n        lost_date: this.aux_lost_date,\n        loss_detail: this.aux_loss_detail,\n        link: this.aux_link,\n        good_id: this.aux_good_id,\n        condition_id: 3,\n      });\n      window.location.href = \"/condition_goods\";\n    },\n\n    async reportDestruction() {\n      const response = await axios.post(\"/condition_goods.json\", {\n        destruction_date: this.aux_destruction_date,\n        destruction_detail: this.aux_destruction_detail,\n        repairable: this.aux_repairable,\n        link: this.aux_link,\n        good_id: this.aux_good_id,\n        condition_id: 4,\n      });\n      console.log(this.condition_id);\n      console.log(this.aux_good_id);\n      window.location.href = \"/condition_goods\";\n    },\n\n    async reportExcluded() {\n      const response = await axios.post(\"/condition_goods.json\", {\n\n        request_date: this.aux_request_date,\n        request_status: this.aux_request_status,\n        income_reason: this.aux_income_reason,\n        date_entry: this.aux_date_entry,\n        link: this.aux_link,\n        good_id: this.aux_good_id,\n        condition_id: 2,\n\n      });\n      console.log(this.goods);\n      window.location.href = \"/condition_goods\";\n    },\n\n    async reportRequest() {\n      const response = await axios.post(\"/condition_goods.json\", {\n\n        request_date: this.aux_request_date,\n        request_status: this.aux_request_status,\n        income_reason: this.aux_income_reason,\n        link: this.aux_link,\n        good_id: this.aux_good_id,\n        condition_id: 1,\n\n      });\n      console.log(this.goods);\n      window.location.href = \"/condition_goods\";\n    },\n\n\n\n\n\n\n\n    confirmregister() {\n      this.$buefy.dialog.confirm({\n        title: \"Registrar el Bien\",\n        message: `¿Esta seguro de registrar esté bien?`,\n        cancelText: \"Cancelar\",\n        confirmText: \"Registrar\",\n        type: \"is-info\",\n        onConfirm: () => this.createClick(),\n      });\n    },\n    deleteDropFile(index) {\n      this.dropFiles.splice(index, 1)\n    },\n  },\n  created() {\n    this.getgoods();\n    this.getgood();\n    this.getunit();\n    \n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}