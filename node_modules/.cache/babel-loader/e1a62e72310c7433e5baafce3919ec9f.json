{"ast":null,"code":"import { _ as __vue_normalize__, r as registerComponent, u as use } from './chunk-cca88db8.js';\nimport { C as CheckRadioMixin } from './chunk-2793447b.js'; //\n\nvar script = {\n  name: 'BRadio',\n  mixins: [CheckRadioMixin]\n};\n/* script */\n\nvar __vue_script__ = script;\n/* template */\n\nvar __vue_render__ = function __vue_render__() {\n  var _vm = this;\n\n  var _h = _vm.$createElement;\n\n  var _c = _vm._self._c || _h;\n\n  return _c('label', {\n    ref: \"label\",\n    staticClass: \"b-radio radio\",\n    \"class\": [_vm.size, {\n      'is-disabled': _vm.disabled\n    }],\n    attrs: {\n      \"disabled\": _vm.disabled\n    },\n    on: {\n      \"click\": _vm.focus,\n      \"keydown\": function keydown($event) {\n        if (!$event.type.indexOf('key') && _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")) {\n          return null;\n        }\n\n        $event.preventDefault();\n        return _vm.$refs.label.click();\n      }\n    }\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.computedValue,\n      expression: \"computedValue\"\n    }],\n    ref: \"input\",\n    attrs: {\n      \"type\": \"radio\",\n      \"disabled\": _vm.disabled,\n      \"required\": _vm.required,\n      \"name\": _vm.name\n    },\n    domProps: {\n      \"value\": _vm.nativeValue,\n      \"checked\": _vm._q(_vm.computedValue, _vm.nativeValue)\n    },\n    on: {\n      \"click\": function click($event) {\n        $event.stopPropagation();\n      },\n      \"change\": function change($event) {\n        _vm.computedValue = _vm.nativeValue;\n      }\n    }\n  }), _c('span', {\n    staticClass: \"check\",\n    \"class\": _vm.type\n  }), _c('span', {\n    staticClass: \"control-label\"\n  }, [_vm._t(\"default\")], 2)]);\n};\n\nvar __vue_staticRenderFns__ = [];\n/* style */\n\nvar __vue_inject_styles__ = undefined;\n/* scoped */\n\nvar __vue_scope_id__ = undefined;\n/* module identifier */\n\nvar __vue_module_identifier__ = undefined;\n/* functional template */\n\nvar __vue_is_functional_template__ = false;\n/* style inject */\n\n/* style inject SSR */\n\nvar Radio = __vue_normalize__({\n  render: __vue_render__,\n  staticRenderFns: __vue_staticRenderFns__\n}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, undefined, undefined); //\n\n\nvar script$1 = {\n  name: 'BRadioButton',\n  mixins: [CheckRadioMixin],\n  props: {\n    type: {\n      type: String,\n      \"default\": 'is-primary'\n    },\n    expanded: Boolean\n  },\n  data: function data() {\n    return {\n      isFocused: false\n    };\n  },\n  computed: {\n    isSelected: function isSelected() {\n      return this.newValue === this.nativeValue;\n    },\n    labelClass: function labelClass() {\n      return [this.isSelected ? this.type : null, this.size, {\n        'is-selected': this.isSelected,\n        'is-disabled': this.disabled,\n        'is-focused': this.isFocused\n      }];\n    }\n  }\n};\n/* script */\n\nvar __vue_script__$1 = script$1;\n/* template */\n\nvar __vue_render__$1 = function __vue_render__$1() {\n  var _vm = this;\n\n  var _h = _vm.$createElement;\n\n  var _c = _vm._self._c || _h;\n\n  return _c('div', {\n    staticClass: \"control\",\n    \"class\": {\n      'is-expanded': _vm.expanded\n    }\n  }, [_c('label', {\n    ref: \"label\",\n    staticClass: \"b-radio radio button\",\n    \"class\": _vm.labelClass,\n    attrs: {\n      \"disabled\": _vm.disabled\n    },\n    on: {\n      \"click\": _vm.focus,\n      \"keydown\": function keydown($event) {\n        if (!$event.type.indexOf('key') && _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")) {\n          return null;\n        }\n\n        $event.preventDefault();\n        return _vm.$refs.label.click();\n      }\n    }\n  }, [_vm._t(\"default\"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.computedValue,\n      expression: \"computedValue\"\n    }],\n    ref: \"input\",\n    attrs: {\n      \"type\": \"radio\",\n      \"disabled\": _vm.disabled,\n      \"required\": _vm.required,\n      \"name\": _vm.name\n    },\n    domProps: {\n      \"value\": _vm.nativeValue,\n      \"checked\": _vm._q(_vm.computedValue, _vm.nativeValue)\n    },\n    on: {\n      \"click\": function click($event) {\n        $event.stopPropagation();\n      },\n      \"focus\": function focus($event) {\n        _vm.isFocused = true;\n      },\n      \"blur\": function blur($event) {\n        _vm.isFocused = false;\n      },\n      \"change\": function change($event) {\n        _vm.computedValue = _vm.nativeValue;\n      }\n    }\n  })], 2)]);\n};\n\nvar __vue_staticRenderFns__$1 = [];\n/* style */\n\nvar __vue_inject_styles__$1 = undefined;\n/* scoped */\n\nvar __vue_scope_id__$1 = undefined;\n/* module identifier */\n\nvar __vue_module_identifier__$1 = undefined;\n/* functional template */\n\nvar __vue_is_functional_template__$1 = false;\n/* style inject */\n\n/* style inject SSR */\n\nvar RadioButton = __vue_normalize__({\n  render: __vue_render__$1,\n  staticRenderFns: __vue_staticRenderFns__$1\n}, __vue_inject_styles__$1, __vue_script__$1, __vue_scope_id__$1, __vue_is_functional_template__$1, __vue_module_identifier__$1, undefined, undefined);\n\nvar Plugin = {\n  install: function install(Vue) {\n    registerComponent(Vue, Radio);\n    registerComponent(Vue, RadioButton);\n  }\n};\nuse(Plugin);\nexport default Plugin;\nexport { Radio as BRadio, RadioButton as BRadioButton };","map":null,"metadata":{},"sourceType":"module"}