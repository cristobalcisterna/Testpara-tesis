{"ast":null,"code":"function _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport axios from \"axios\";\nexport default {\n  name: \"show_building\",\n  props: [\"id\", 'queryType', 'modalHeader', 'buildingId'],\n  data: function data() {\n    return {\n      offices: [],\n      id_goods_list: [],\n      id_offices_list: [],\n      goods: [],\n      goodamounts: [],\n      building: null,\n      total: null,\n      null_activegood: 0,\n      props: [\"id\"]\n    };\n  },\n  methods: {\n    getoffices: function getoffices() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"/offices/showofficebuilding/\" + _this.buildingId + \".json\");\n\n              case 2:\n                response = _context.sent;\n                _this.offices = response.data;\n                _this.id_offices_list = _this.offices.map(function (o) {\n                  return o['id'];\n                });\n                console.log(_this.id_offices_list);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    getbuildings: function getbuildings() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get(\"/buildings/\" + _this2.buildingId + \".json\");\n\n              case 2:\n                response = _context2.sent;\n                _this2.building = response.data;\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    getgoodbybuilding: function getgoodbybuilding() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response, c;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios.get(\"/goods/showgoodbuilding/\" + _this3.buildingId + \".json\");\n\n              case 2:\n                response = _context3.sent;\n                _this3.goods = response.data;\n                _this3.goodamounts = _this3.goods.map(function (o) {\n                  return o['amount'];\n                });\n                _this3.id_goods_list = _this3.goods.map(function (o) {\n                  return o['id'];\n                });\n                c = 0;\n                _this3.total = _this3.goodamounts.reduce(function (a, b) {\n                  return a + b;\n                }, c);\n                console.log(_this3.id_goods_list);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    Clickshowgood: function Clickshowgood(item) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                window.location.href = \"/goods/\" + item;\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    confirmGoodNull: function confirmGoodNull(item) {\n      var _this4 = this;\n\n      this.$buefy.dialog.confirm({\n        title: \"Anular Bien\",\n        message: \"¿Esta seguro de querer anular el bien?.\",\n        confirmText: \"Anular\",\n        cancelText: \"Cancelar\",\n        type: \"is-danger\",\n        hasIcon: true,\n        onConfirm: function onConfirm() {\n          return _this4.AnulGoodClick(item);\n        }\n      });\n    },\n    AnulGoodClick: function AnulGoodClick(item) {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return axios.put(\"/goods/\" + item + \".json\", {\n                  activegood: _this5.null_activegood\n                });\n\n              case 2:\n                response = _context5.sent;\n                window.location.href = \"/buildings/\" + _this5.buildingId;\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    },\n    Clickshowunit: function Clickshowunit(item) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                response = window.location.href = \"/units/\" + item;\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    },\n    Clickshowdutymanager: function Clickshowdutymanager(item) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                response = window.location.href = \"/duty_managers/\" + item;\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    },\n    Clickshowbuilding: function Clickshowbuilding(item) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                response = window.location.href = \"/buildings/\" + item;\n\n              case 1:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    },\n    Clickshowoffice: function Clickshowoffice(item) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                response = window.location.href = \"/offices/\" + item;\n\n              case 1:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }))();\n    }\n  },\n  created: function created() {\n    this.getbuildings();\n    this.getoffices();\n    this.getgoodbybuilding();\n  }\n};","map":{"version":3,"mappings":"+CA6OA,oJ;;;;;;AAAA;AACA;EACAA,qBADA;EAEAC,uDAFA;EAGAC,IAHA,kBAGA;IACA;MACAC,WADA;MAEAC,iBAFA;MAGAC,mBAHA;MAIAC,SAJA;MAKAC,eALA;MAMAC,cANA;MAOAC,WAPA;MAQAC,kBARA;MASAT;IATA;EAWA,CAfA;EAgBAU;IACAC,UADA,wBACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC,UACA,2DADA,CADA;;cAAA;gBACAC,QADA;gBAIA;gBACA;kBAAA;gBAAA;gBACAC;;cANA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAOA,CARA;IAUAC,YAVA,0BAUA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAH,UACA,2CADA,CADA;;cAAA;gBACAC,QADA;gBAIA;;cAJA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAKA,CAfA;IAiBAG,iBAjBA,+BAiBA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAJ,mEADA;;cAAA;gBACAC,QADA;gBAEA;gBACA;kBAAA;gBAAA;gBACA;kBAAA;gBAAA;gBAEAI,CANA,GAMA,CANA;gBAOA;kBAAA;gBAAA;gBACAH;;cARA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IASA,CA1BA;IA4BAI,aA5BA,yBA4BAC,IA5BA,EA4BA;MAAA;QAAA;UAAA;YAAA;cAAA;gBACAC;;cADA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA,CA9BA;IAgCAC,eAhCA,2BAgCAF,IAhCA,EAgCA;MAAA;;MACA;QACAG,oBADA;QAEAC,kDAFA;QAGAC,qBAHA;QAIAC,sBAJA;QAKAC,iBALA;QAMAC,aANA;QAOAC;UAAA;QAAA;MAPA;IASA,CA1CA;IA4CAC,aA5CA,yBA4CAV,IA5CA,EA4CA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAP;kBACAkB;gBADA,EADA;;cAAA;gBACAjB,QADA;gBAIAO;;cAJA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAKA,CAjDA;IAmDAW,aAnDA,yBAmDAZ,IAnDA,EAmDA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAN,QADA,GACAO,uCADA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA,CArDA;IAuDAY,oBAvDA,gCAuDAb,IAvDA,EAuDA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAN,QADA,GACAO,+CADA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA,CAzDA;IA0DAa,iBA1DA,6BA0DAd,IA1DA,EA0DA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAN,QADA,GACAO,2CADA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA,CA5DA;IA6DAc,eA7DA,2BA6DAf,IA7DA,EA6DA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAN,QADA,GACAO,yCADA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA;EA/DA,CAhBA;EAkFAe,OAlFA,qBAkFA;IACA;IACA;IACA;EACA;AAtFA","names":["name","props","data","offices","id_goods_list","id_offices_list","goods","goodamounts","building","total","null_activegood","methods","getoffices","axios","response","console","getbuildings","getgoodbybuilding","c","Clickshowgood","item","window","confirmGoodNull","title","message","confirmText","cancelText","type","hasIcon","onConfirm","AnulGoodClick","activegood","Clickshowunit","Clickshowdutymanager","Clickshowbuilding","Clickshowoffice","created"],"sourceRoot":"app/javascript/components/building","sources":["show_my_building.vue"],"sourcesContent":["<template>\n    <section class=\"b-tooltips\">\n      <div class=\"box\" style=\"margin-top: 60px; margin-left: 300px; margin-right: 300px\">\n  \n        <h1>Detalle de mi Edificio</h1>\n        <b-tabs type=\"is-boxed\" position=\"is-centered\">\n  \n          <b-tab-item label=\"Detalle del Edificio\">\n            <div class=\"center\">\n              <h1>Información del Edificio</h1>\n            </div>\n            <div class=\"box\" style=\"margin-top: 60px; margin-left: 100px; margin-right: 100px;\">\n  \n              <div v-if=\"building\" class=\"columns is-centered\">\n  \n  \n                <div class=\"column is-centered\">\n  \n                  <div class=\"columns\">\n                    <div class=\"column\">\n                      <b-field label=\"Nombre edificio:\">\n                        <b-input v-model=\"building.name_building \" type=\"text\" readonly></b-input>\n                      </b-field>\n                    </div>\n                  </div>\n                  <div class=\"columns\">\n                    <div class=\"column\">\n                      <b-field label=\"Numero identificación del edificio:\">\n                        <b-input v-model=\"building.identification_number_building\" type=\"text\" readonly></b-input>\n                      </b-field>\n                    </div>\n                  </div>\n                  <div class=\"columns\">\n                    <div class=\"column\">\n                      <b-field label=\"Monto bruto total invertido en bienes: \">\n                        <b-input v-model=\"total\" type=\"text\" readonly></b-input>\n                      </b-field>\n                    </div>\n                  </div>\n  \n                  <div class=\"columns\">\n                    <div class=\"column\">\n                      <b-field label=\"Ubicación:\">\n                        <b-input v-model=\"building.location_building\" type=\"text\" readonly></b-input>\n                      </b-field>\n                    </div>\n                  </div>\n  \n  \n                  <div class=\"columns\">\n                    <div class=\"column\">\n                      <b-field label=\"Unidad: \">\n                        <b-input icon=\"eye\" icon-clickable @icon-click=\"Clickshowunit(building.unit_id)\"\n                          v-model=\"building.unit.name_unit\" type=\"text\" readonly></b-input>\n                      </b-field>\n                    </div>\n                  </div>\n                  <div class=\"columns\">\n  \n  \n                    <div class=\"column\" v-show='!(building.duty_manager.active_duty_manager == 0)'>\n                      <b-field label=\"Persona encargada: \">\n                        <b-input icon=\"eye\" icon-clickable @icon-click=\"Clickshowdutymanager(building.duty_manager_id)\"\n                          v-model=\"building.duty_manager.name_duty_manager\" type=\"text\" readonly></b-input>\n                      </b-field>\n                    </div>\n  \n                    <div class=\"column\" v-show='(building.duty_manager.active_duty_manager == 0)'>\n                      <b-field label=\"Anterior persona asociada:: \">\n                        <b-input icon=\"eye\" icon-clickable @icon-click=\"Clickshowdutymanager(building.duty_manager_id)\"\n                          v-model=\"building.duty_manager.name_duty_manager\" type=\"text\" readonly></b-input>\n                      </b-field>\n                    </div>\n  \n  \n  \n                  </div>\n  \n  \n  \n                </div>\n  \n              </div>\n  \n              <div v-else>\n                <p>Loading</p>\n              </div>\n  \n            </div>\n          </b-tab-item>\n  \n  \n  \n  \n  \n  \n  \n  \n          <b-tab-item label=\"Dependencias del edificio\">\n            <div class=\"center\">\n              <h1>Dependencias del edificio</h1>\n            </div>\n  \n  \n            <div class=\"column\">\n              <b-table :data=\"offices\" :paginated=\"true\" per-page=\"8\" striped hoverable :pagination-simple=\"false\"\n                pagination-position=\"bottom\" sort-icon=\"arrow-up\" sort-icon-size=\"is-small\"\n                aria-next-label=\"Siguiente\" aria-previous-label=\"Anterior\"\n                aria-page-label=\"Página\" aria-current-label=\"Página actual\">\n                <b-table-column :visible=\"false\" field=\"id\" label=\"ID\" sortable searchable>\n                  <template v-slot=\"props\">\n                    {{ props.row.id }}\n                  </template>\n                </b-table-column>\n  \n                <b-table-column field=\"name_office\" label=\"Nombre dependencia\" sortable searchable>\n                  <template v-slot=\"props\">\n                    <a href=\"#\" @click=\"Clickshowoffice(props.row.id)\">{{ props.row.name_office }}</a>\n  \n                  </template>\n                </b-table-column>\n  \n                <b-table-column field=\"identification_number_office\" label=\"N° Identificación\" sortable searchable>\n                  <template v-slot=\"props\">\n                    {{ props.row.identification_number_office }}\n                  </template>\n                </b-table-column>\n  \n                <b-table-column field=\"building.name_building\" label=\"Edificio\" sortable searchable>\n                  <template v-slot=\"props\">\n                    <a href=\"#\" @click=\"Clickshowbuilding(props.row.building_id)\">{{ props.row.building.name_building\n                    }}</a>\n  \n                  </template>\n                </b-table-column>\n  \n                <b-table-column field=\"location\" label=\"Ubicación\" sortable searchable>\n                  <template v-slot=\"props\">\n                    {{ props.row.location }}\n                  </template>\n                </b-table-column>\n  \n                <b-table-column field=\"id\" width=\"10\" v-slot=\"props\">\n                  <b-tooltip label=\"Ver detalle\" type=\"is-info\">\n                    <b-icon pack=\"fas\" icon=\"eye\" size=\"is-medium\" @click.native=\"Clickshowoffice(props.row.id)\" />\n                  </b-tooltip>\n                </b-table-column>\n              </b-table>\n            </div>\n  \n          </b-tab-item>\n  \n          <b-tab-item label=\"Bienes de la unidad\">\n            <div class=\"center\">\n              <h1>Bienes de la unidad</h1>\n            </div>\n            <div class=\"box\">\n              <div class=\"column\">\n                <b-table :data=\"goods\" :paginated=\"true\" per-page=\"8\" striped hoverable :pagination-simple=\"false\"\n                  pagination-position=\"bottom\"  sort-icon=\"arrow-up\" sort-icon-size=\"is-small\"\n                  aria-next-label=\"Siguiente\" aria-previous-label=\"Anterior\"\n                  aria-page-label=\"Página\" aria-current-label=\"Página actual\">\n  \n                  <b-table-column :visible=\"false\" field=\"id\" label=\"ID\" sortable searchable>\n                    <template v-slot=\"props\">\n                      {{ props.row.id }}\n                    </template>\n                  </b-table-column>\n  \n                  <b-table-column field=\"namegood\" label=\"Nombre\" sortable searchable>\n                    <template v-slot=\"props\">\n                      <a href=\"#\" @click=\"Clickshowgood(props.row.id)\">{{ props.row.namegood }}</a>\n                    </template>\n                  </b-table-column>\n  \n                  <b-table-column field=\"identification_number_good\" label=\"N° Inventario\" sortable searchable>\n                    <template v-slot=\"props\">\n                      {{ props.row.identification_number_good }}\n                    </template>\n                  </b-table-column>\n  \n                  <b-table-column field=\"duty_manager.name_duty_manager\" label=\"Nombre Persona asociada\" sortable\n                    searchable>\n                    <template v-slot=\"props\">\n                      <a href=\"#\" @click=\"Clickshowdutymanager(props.row.duty_manager_id)\">{{\n                      props.row.duty_manager.name_duty_manager }}</a>\n                    </template>\n                  </b-table-column>\n  \n                  <b-table-column field=\"office.name_building\" label=\"Edificio\" sortable searchable>\n                    <template v-slot=\"props\">\n                      <a href=\"#\" @click=\"Clickshowbuilding(props.row.office.building_id)\">{{\n                      props.row.office.name_building }}</a>\n                    </template>\n                  </b-table-column>\n  \n                  <b-table-column field=\"office.name_office\" label=\"Dependencia\" sortable searchable>\n                    <template v-slot=\"props\">\n                      <a href=\"#\" @click=\"Clickshowoffice(props.row.office_id)\">{{ props.row.office.name_office }}</a>\n  \n                    </template>\n                  </b-table-column>\n  \n                  <b-table-column field=\"id\" width=\"10\" v-slot=\"props\" size=\"is-small\">\n                    <div class=\"columns\">\n                      <div class=\"column\">\n                        <b-tooltip label=\"Ver detalle\" type=\"is-info\">\n                          <b-icon pack=\"fas\" icon=\"eye\" size=\"is-medium\" @click.native=\"Clickshowgood(props.row.id)\" />\n                        </b-tooltip>\n                      </div>\n                      <div class=\"column\">\n                      <b-tooltip label=\"Anular\" type=\"is-info\">\n                        <b-icon pack=\"fas\" icon=\"trash\" size=\"is-medium\" @click.native=\"confirmGoodNull(props.row.id)\" />\n                      </b-tooltip>\n                    </div>\n  \n                    </div>\n                  </b-table-column>\n  \n                </b-table>\n              </div>\n            </div>\n          </b-tab-item>\n  \n        </b-tabs>\n      </div>\n  \n      <a href=\"/duty_managers/mybuildings\" style=\"font-weight: normal;\n    font-size: 20px;\n    font-family: Arial;\n    margin: 10px;\n    margin-left: 30px;\">Volver</a>\n    </section>\n  </template>\n  \n   \n  <script>\n  import axios from \"axios\";\n  export default {\n    name:\"show_building\",\n    props: [\"id\",'queryType', 'modalHeader','buildingId'],\n    data() {\n      return {\n        offices: [],\n        id_goods_list: [],\n        id_offices_list: [],\n        goods: [],\n        goodamounts: [],\n        building: null,\n        total: null,\n        null_activegood: 0,\n        props: [\"id\"],\n      };\n    },\n    methods: {\n      async getoffices() {\n        const response = await axios.get(\n          \"/offices/showofficebuilding/\" + this.buildingId + \".json\"\n        );\n        this.offices = response.data;\n        this.id_offices_list = this.offices.map(o => o['id']);\n        console.log(this.id_offices_list);\n      },\n  \n      async getbuildings() {\n        const response = await axios.get(\n          \"/buildings/\" + this.buildingId + \".json\"\n        );\n        this.building = response.data;\n      },\n  \n          async getgoodbybuilding() {\n        const response = await axios.get(\"/goods/showgoodbuilding/\" + this.buildingId + \".json\");\n        this.goods = response.data;\n        this.goodamounts = this.goods.map(o => o['amount']);\n        this.id_goods_list = this.goods.map(o => o['id']);\n  \n        const c = 0;\n        this.total = this.goodamounts.reduce((a, b) => a + b,c);\n        console.log(this.id_goods_list);\n      },\n  \n      async Clickshowgood(item) {\n        window.location.href = \"/goods/\" + item;\n      },\n  \n      confirmGoodNull(item) {\n        this.$buefy.dialog.confirm({\n          title: \"Anular Bien\",\n          message: \"¿Esta seguro de querer anular el bien?.\",\n          confirmText: \"Anular\",\n          cancelText: \"Cancelar\",\n          type: \"is-danger\",\n          hasIcon: true,\n          onConfirm: () => this.AnulGoodClick(item),\n        });\n      },\n  \n      async AnulGoodClick(item) {\n        const response = await axios.put(\"/goods/\" + item + \".json\", {\n          activegood: this.null_activegood,\n        });\n        window.location.href = \"/buildings/\" + this.buildingId;\n      },\n  \n      async Clickshowunit(item) {\n        const response = (window.location.href = \"/units/\" + item);\n      },\n  \n      async Clickshowdutymanager(item) {\n        const response = (window.location.href = \"/duty_managers/\" + item);\n      },\n      async Clickshowbuilding(item) {\n        const response = (window.location.href = \"/buildings/\" + item);\n      },\n      async Clickshowoffice(item) {\n        const response = (window.location.href = \"/offices/\" + item);\n      },\n  \n    },\n    created() {\n      this.getbuildings();\n      this.getoffices();\n      this.getgoodbybuilding();\n    },\n  };\n  </script>\n  \n  \n  \n  \n  "]},"metadata":{},"sourceType":"module"}